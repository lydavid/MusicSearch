plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dagger.hilt.android.plugin"
    id "kotlin-kapt"
}

android {
    signingConfigs {
        release {

            // https://developer.android.com/studio/publish/app-signing#secure-shared-keystore
            def keystorePropertiesExists = rootProject.file("ignore_folder/keystore.properties").exists()
            def releaseKeystoreExists = rootProject.file("ignore_folder/release-keystore.jks").exists()

            if (keystorePropertiesExists && releaseKeystoreExists) {
                def keystorePropertiesFile = rootProject.file("ignore_folder/keystore.properties")
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                storeFile rootProject.file("ignore_folder/release-keystore.jks")
                keyAlias "mbjc"
                storePassword keystoreProperties["storePassword"]
                keyPassword keystoreProperties["keyPassword"]
            }
        }
    }

    defaultConfig {
        applicationId "io.github.lydavid.musicsearch"
        versionCode 2
        versionName "0.2.0"

        testInstrumentationRunner "ly.david.mbjc.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }

//        kapt {
//            arguments {
//                arg("room.schemaLocation", "$projectDir/schemas")
//            }
//        }
    }

    buildTypes {
        debug {
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"

            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    // TODO: Not working on Windows 10: https://issuetracker.google.com/issues/249111286
//    testOptions {
//        managedDevices {
//            devices {
//                pixel2api30 (com.android.build.api.dsl.ManagedVirtualDevice) {
//                    // Use device profiles you typically see in Android Studio.
//                    device = "Pixel 2"
//                    // Use only API levels 27 and higher.
//                    apiLevel = 30
//                    // To include Google services, use "google".
//                    systemImageSource = "aosp"
//                }
//            }
//        }
//    }
    namespace 'ly.david.mbjc'
}

dependencies {
    implementation project(path: ':data-android')
    testImplementation project(path: ':test-data')
    androidTestImplementation project(path: ':test-data')

    implementation platform('com.google.firebase:firebase-bom:31.2.1')

    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"

    implementation "androidx.core:core-ktx:1.9.0"

    implementation libs.compose.foundation
    implementation libs.compose.ui
    implementation libs.compose.ui.preview
    androidTestImplementation libs.compose.ui.test
    debugImplementation libs.compose.ui.tooling

    implementation libs.compose.material
    implementation libs.compose.material.icons.extended

    implementation "androidx.compose.material3:material3:1.0.1"
    implementation "androidx.activity:activity-compose:1.6.1"
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"

    // Accompanist
    implementation "com.google.accompanist:accompanist-swiperefresh:0.25.1"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:3.1.1"

    // https://developer.android.com/jetpack/androidx/releases/paging#1.0.0-alpha15
    // LazyPagingItems now sets the initial loadState to have a LoadState.Loading refresh.
    // https://issuetracker.google.com/issues/224855902
    implementation "androidx.paging:paging-compose:1.0.0-alpha14"

    // Retrofit
    implementation libs.retrofit
    implementation libs.retrofit.converter.moshi

    // Room
    androidTestImplementation libs.room.testing

    // Hilt
    implementation libs.hilt.android
    implementation libs.hilt.navigation.compose
    kapt libs.hilt.android.compiler
    kaptAndroidTest libs.hilt.android.compiler
    androidTestImplementation libs.hilt.android.testing

    // Coil
    implementation("io.coil-kt:coil-base:2.2.2")
    implementation("io.coil-kt:coil-compose:2.2.2")

    // Tried this for UScript.getName(UScript.getCodeFromName(it))
//    implementation "com.ibm.icu:icu4j:72.1"

    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation "com.jakewharton.timber:timber:5.0.1"

    // Test - General
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    androidTestImplementation "com.squareup.okhttp3:okhttp-tls:4.10.0"

    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
}

if (file("google-services.json").exists()) {
    apply plugin: "com.google.gms.google-services"
    apply plugin: "com.google.firebase.crashlytics"
}
