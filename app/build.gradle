plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dagger.hilt.android.plugin"
    id "kotlin-kapt"
}

android {
    signingConfigs {
        release {

            // https://developer.android.com/studio/publish/app-signing#secure-shared-keystore
            def keystorePropertiesExists = rootProject.file("ignore_folder/keystore.properties").exists()
            def releaseKeystoreExists = rootProject.file("ignore_folder/release-keystore.jks").exists()

            if (keystorePropertiesExists && releaseKeystoreExists) {
                def keystorePropertiesFile = rootProject.file("ignore_folder/keystore.properties")
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                storeFile rootProject.file("ignore_folder/release-keystore.jks")
                keyAlias "mbjc"
                storePassword keystoreProperties["storePassword"]
                keyPassword keystoreProperties["keyPassword"]
            }
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "ly.david.mbjc"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "ly.david.mbjc.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }

//        kapt {
//            arguments {
//                arg("room.schemaLocation", "$projectDir/schemas")
//            }
//        }
    }

    buildTypes {
        debug {
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"

            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.3.0"
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    // TODO: Not working on Windows 10: https://issuetracker.google.com/issues/249111286
//    testOptions {
//        managedDevices {
//            devices {
//                pixel2api30 (com.android.build.api.dsl.ManagedVirtualDevice) {
//                    // Use device profiles you typically see in Android Studio.
//                    device = "Pixel 2"
//                    // Use only API levels 27 and higher.
//                    apiLevel = 30
//                    // To include Google services, use "google".
//                    systemImageSource = "aosp"
//                }
//            }
//        }
//    }
    namespace 'ly.david.mbjc'
}

dependencies {
    implementation project(path: ':data-android')
    androidTestImplementation project(path: ':test-data')

    implementation "androidx.core:core-ktx:1.9.0"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Updating breaks ExposedDropdownMenuBox
    implementation "androidx.compose.material3:material3:1.0.0-alpha09"
    implementation "androidx.activity:activity-compose:1.6.1"
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

    // Accompanist
    implementation "com.google.accompanist:accompanist-swiperefresh:0.25.1"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:3.1.1"

    // https://developer.android.com/jetpack/androidx/releases/paging#1.0.0-alpha15
    // LazyPagingItems now sets the initial loadState to have a LoadState.Loading refresh.
    // https://issuetracker.google.com/issues/224855902
    implementation "androidx.paging:paging-compose:1.0.0-alpha14"

    // Room
    androidTestImplementation "androidx.room:room-testing:2.5.0-beta01"

    // Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-android-compiler:2.44"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'
    androidTestImplementation "com.google.dagger:hilt-android-testing:2.44"

    // Coil
    implementation("io.coil-kt:coil-base:2.2.2")
    implementation("io.coil-kt:coil-compose:2.2.2")

    // Tried this for UScript.getName(UScript.getCodeFromName(it))
//    implementation "com.ibm.icu:icu4j:72.1"

    // Test - General
    testImplementation "junit:junit:4.13.2"
//    androidTestImplementation "io.mockk:mockk:1.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.4"
    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation 'androidx.test:runner:1.5.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
}
