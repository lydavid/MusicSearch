stable class ViewModelsModule {
  <runtime stability> = Stable
}
unstable class NowPlayingNotificationListener {
  unstable val coroutineScope$delegate: Lazy<CoroutineScope>
  unstable val nowPlayingHistoryRepository$delegate: Lazy<NowPlayingHistoryRepository>
  <runtime stability> = Unstable
}
unstable class Result {
  unstable val response: AuthorizationResponse?
  unstable val exception: AuthorizationException?
  <runtime stability> = Unstable
}
unstable class MusicBrainzLoginContract {
  unstable val authService: AuthorizationService
  unstable val authRequest: AuthorizationRequest
  <runtime stability> = Unstable
}
stable class RemoteResult {
  stable val message: String
  stable val actionLabel: String?
  <runtime stability> = Stable
}
unstable class AreaStatsViewModel {
  unstable val getCountOfEachRelationshipTypeUseCase: GetCountOfEachRelationshipTypeUseCase
  unstable val getBrowseEntityCountFlowUseCase: GetBrowseEntityCountFlowUseCase
  unstable val releaseCountryDao: ReleaseCountryDao
  unstable val areaPlaceDao: AreaPlaceDao
  <runtime stability> = Unstable
}
unstable class EventStatsViewModel {
  unstable val getCountOfEachRelationshipTypeUseCase: GetCountOfEachRelationshipTypeUseCase
  <runtime stability> = Unstable
}
unstable class InstrumentStatsViewModel {
  unstable val getCountOfEachRelationshipTypeUseCase: GetCountOfEachRelationshipTypeUseCase
  <runtime stability> = Unstable
}
unstable class LabelStatsViewModel {
  unstable val getCountOfEachRelationshipTypeUseCase: GetCountOfEachRelationshipTypeUseCase
  unstable val getBrowseEntityCountFlowUseCase: GetBrowseEntityCountFlowUseCase
  unstable val releaseLabelDao: ReleaseLabelDao
  <runtime stability> = Unstable
}
unstable class PlaceStatsViewModel {
  unstable val getCountOfEachRelationshipTypeUseCase: GetCountOfEachRelationshipTypeUseCase
  unstable val getBrowseEntityCountFlowUseCase: GetBrowseEntityCountFlowUseCase
  unstable val eventPlaceDao: EventPlaceDao
  <runtime stability> = Unstable
}
