restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewExposedDropdownMenuBox()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaListItemDisambiguation()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaListItemCountry()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaListItemWorldwide()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseEvent()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseEventNoDate()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseEventVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewArtistListItemSimple()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewArtistListItemCountryCode()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewArtistListItemAllInfoUnvisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewArtistListItemAllInfoVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewArtistListItemSelected()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewClickableItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewClickableItemWithSubtitle()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewClickableItemWithEndIcon()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewClickableItemWithStartIcon()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewClickableItemWithStartEndIcon()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewMultipleChoiceBottomSheetContent()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSimpleAlertDialog()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewEventListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewEventListItemLong()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewEventListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewEventListItemMultiDay()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewEventListItemCancelled()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewFullScreenErrorWithRetry()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewFullScreenText()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewGenreListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewInstrumentListItemModel()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewInstrumentListItemModelAllInfo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewInstrumentListItemModelVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLabelListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLabelListItemAllInfo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLabelListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview(
  lifeSpan: LifeSpanUiModel
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ListSeparatorHeaderPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewCollapsibleListSeparatorHeaderCollapsed()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewCollapsibleListSeparatorHeaderExpanded()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLastUpdatedFooterItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLastUpdatedText()
fun present(
  stable <this>: LoginPresenterImpl
): LoginUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun FooterLoadingIndicatorPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewPlaceListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewPlaceListItemAllInfo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewPlaceListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewCoordinateListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewRecordingListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewRecordingListItemAllInfo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewRecordingListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewArtistRelationListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewRecordingRelationListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewRecordingRelationListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewUrlListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewUrlListItemWikipedia()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewUrlListItemWikidata()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemDisambiguation()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemDisambiguationCountry()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemCountry()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemDateCountryFormatsTracks()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemCountryDate()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemDateArtistCredits()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemMultipleCountries()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemShowLessInfo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemCatalog()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTrackListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTrackListItemAllInfo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTrackListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseGroupListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseGroupListItemWithType()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseGroupListItemVisited()
fun screenContainerSize()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSeriesListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSeriesListItemAllInfo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSeriesListItemVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTextWithHeading()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewDotsFlashing()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewScrollableTopAppBar()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewScrollableTopAppBarWithIcon()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewScrollableTopAppBarWithTabs()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewScrollableTopAppBarLoading()
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable]]") fun TopAppBarWithFilter(
  stable modifier: Modifier? = @static Companion
  stable onBack: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):TopAppBarWithFilter.android.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.topappbar.TopAppBarWithFilter
  stable showBackButton: Boolean = @static true
  stable entity: MusicBrainzEntity? = @static null
  stable title: String? = @static ""
  stable subtitle: String? = @static ""
  stable scrollBehavior: TopAppBarScrollBehavior? = @static null
  stable overflowDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
  stable subtitleDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
  stable topAppBarFilterState: TopAppBarFilterState? = @dynamic TopAppBarFilterState()
  stable topAppBarEditState: TopAppBarEditState? = @dynamic TopAppBarEditState()
  stable additionalActions: Function2<Composer, Int, Unit>? = @static ComposableSingletons$TopAppBarWithFilter_androidKt.lambda$2099573828
  stable additionalBar: Function2<Composer, Int, Unit>? = @static ComposableSingletons$TopAppBarWithFilter_androidKt.lambda$1900523502
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTopAppBarWithFilter()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTopAppBarWithFilterFilterMode()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTopAppBarWithFilterFilterModeWithText()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTopAppBarWithFilterNoFilter()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTopAppBarWithFilterWithTabs()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTopAppBarWithFilterWithTabsFilterMode()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTopAppBarWithFilterWithEditMode()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTopAppBarWithFilterWithEditModeActive()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewUrlsSection()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewWikipediaSection()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewWorkListItemModel()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewWorkListItemModelAllInfo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewWorkListItemModelVisited()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EntityIcon(
  stable entity: MusicBrainzEntity
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ResourceDropdownPicker(
  unstable options: List<MusicBrainzEntity>
  stable selectedOption: MusicBrainzEntity
  stable modifier: Modifier? = @static Companion
  stable onSelectOption: Function1<MusicBrainzEntity, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ResourceDropdownPicker.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     it  :   MusicBrainzEntity   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.ResourceDropdownPicker
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AreaListItem(
  area: AreaListItemModel
  stable modifier: Modifier? = @static Companion
  stable showType: Boolean = @static true
  stable showIcon: Boolean = @static true
  stable onAreaClick: @[ExtensionFunctionType] Function1<AreaListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):AreaListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.area.AreaListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):AreaListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.area.AreaListItem
)
fun present(
  stable <this>: AreasListPresenter
): AreasListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ArtistListItem(
  artist: ArtistListItemModel
  stable modifier: Modifier? = @static Companion
  stable onClick: @[ExtensionFunctionType] Function1<ArtistListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ArtistListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.artist.ArtistListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ArtistListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.artist.ArtistListItem
)
fun present(
  stable <this>: ArtistsListPresenter
): ArtistsListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RetryButton(
  stable modifier: Modifier? = @static Companion
  stable onClick: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):RetryButton.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.button.RetryButton
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ClickableItem(
  stable title: String
  stable modifier: Modifier? = @static Companion
  stable subtitle: String? = @static null
  stable startIcon: ImageVector? = @static null
  stable endIcon: ImageVector? = @static null
  stable onClick: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ClickableItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.component.ClickableItem
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun MultipleChoiceBottomSheet(
  unstable options: List<String>
  stable selectedOptionIndex: Int
  stable onSortOptionIndexClick: Function1<Int, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):MultipleChoiceBottomSheet.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     it  :   Int   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.component.MultipleChoiceBottomSheet
  stable bottomSheetState: SheetState? = @dynamic rememberModalBottomSheetState(false, null, $composer, 0, 0b0011)
  stable onDismiss: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):MultipleChoiceBottomSheet.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.component.MultipleChoiceBottomSheet
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun MultipleChoiceBottomSheetContent(
  unstable options: List<String>
  stable selectedOptionIndex: Int
  stable onSortOptionIndexClick: Function1<Int, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):MultipleChoiceBottomSheet.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     it  :   Int   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.component.MultipleChoiceBottomSheetContent
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun MultipleChoiceDialog(
  stable title: String
  unstable choices: List<String>
  stable selectedChoiceIndex: Int
  stable modifier: Modifier? = @static Companion
  stable onSelectChoiceIndex: Function1<Int, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):MultipleChoiceDialog.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     it  :   Int   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.dialog.MultipleChoiceDialog
  stable onDismiss: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):MultipleChoiceDialog.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.dialog.MultipleChoiceDialog
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SimpleAlertDialog(
  stable title: String
  stable confirmText: String
  stable dismissText: String
  stable onDismiss: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):SimpleAlertDialog.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.dialog.SimpleAlertDialog
  stable onConfirmClick: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):SimpleAlertDialog.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.dialog.SimpleAlertDialog
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EventListItem(
  event: EventListItemModel
  stable modifier: Modifier? = @static Companion
  stable onEventClick: @[ExtensionFunctionType] Function1<EventListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):EventListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.event.EventListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):EventListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.event.EventListItem
)
fun present(
  stable <this>: EventsListPresenter
): EventsListUiState
restartable skippable fun DetailsWithErrorHandling(
  detailsModel: T?
  stable onRefresh: Function0<Unit>
  stable modifier: Modifier? = @static Companion
  stable showLoading: Boolean = @static false
  stable showError: Boolean = @static false
  handledException: HandledException? = @static null
  stable detailsScreen: Function3<T, Composer, Int, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun FullScreenContent(
  stable modifier: Modifier? = @static Companion
  stable content: @[ExtensionFunctionType] Function3<ColumnScope, Composer, Int, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun FullScreenErrorWithRetry(
  stable modifier: Modifier? = @static Companion
  handledException: HandledException? = @static null
  stable onClick: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):FullScreenErrorWithRetry.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.fullscreen.FullScreenErrorWithRetry
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun FullScreenLoadingIndicator(
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun FullScreenText(
  stable text: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun GenreListItem(
  genre: GenreListItemModel
  stable modifier: Modifier? = @static Companion
  stable onGenreClick: @[ExtensionFunctionType] Function1<GenreListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):GenreListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.genre.GenreListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):GenreListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.genre.GenreListItem
)
fun present(
  stable <this>: GenresListPresenter
): GenresListUiState
restartable skippable fun InitializeImageLoader()
restartable skippable fun LargeImage(
  stable url: String
  stable placeholderKey: String
  stable modifier: Modifier? = @static Companion
  stable isCompact: Boolean = @static true
  stable zoomEnabled: Boolean = @static false
  stable onClick: Function0<Unit>? = @static null
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PlaceholderIcon(
  stable modifier: Modifier? = @static Companion
  stable placeholderIcon: ImageVector? = @static null
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ThumbnailImage(
  stable url: String
  stable placeholderKey: String
  stable placeholderIcon: ImageVector?
  stable modifier: Modifier? = @static Companion
  stable isSelected: Boolean = @static false
  stable size: Dp = @static 56.dp
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun InstrumentListItem(
  instrument: InstrumentListItemModel
  stable modifier: Modifier? = @static Companion
  stable onInstrumentClick: @[ExtensionFunctionType] Function1<InstrumentListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):InstrumentListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.instrument.InstrumentListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):InstrumentListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.instrument.InstrumentListItem
)
fun present(
  stable <this>: InstrumentsListPresenter
): InstrumentsListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LabelListItem(
  label: LabelListItemModel
  stable modifier: Modifier? = @static Companion
  stable showIcon: Boolean = @static true
  stable onLabelClick: @[ExtensionFunctionType] Function1<LabelListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):LabelListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.label.LabelListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):LabelListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.label.LabelListItem
)
fun present(
  stable <this>: LabelsListPresenter
): LabelsListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EntitiesListScreen(
  uiState: EntitiesListUiState
  stable modifier: Modifier? = @static Companion
  stable selectedIds: ImmutableSet<String>? = @static persistentSetOf()
  unstable now: Instant? = @dynamic System.now()
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):EntitiesListScreen.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.list.EntitiesListScreen
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):EntitiesListScreen.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.list.EntitiesListScreen
  unstable requestForMissingCoverArtUrl: SuspendFunction1<@[ParameterName(name = 'id')] String, Unit>? = @dynamic $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):EntitiesListScreen.kt#9igjgp")
val tmp2_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp2_group@ly.david.musicsearch.ui.common.list.EntitiesListScreen
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EntitiesListUi(
  uiState: EntitiesListUiState
  stable innerPadding: PaddingValues
  stable scrollBehavior: TopAppBarScrollBehavior
  stable selectedIds: ImmutableSet<String>? = @static persistentSetOf()
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):EntitiesListUi.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.list.EntitiesListUi
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):EntitiesListUi.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.list.EntitiesListUi
  stable requestForMissingCoverArtUrl: Function1<@[ParameterName(name = 'entityId')] String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):EntitiesListUi.kt#9igjgp")
val tmp2_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp2_group@ly.david.musicsearch.ui.common.list.EntitiesListUi
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CollapsibleListSeparatorHeader(
  stable text: String
  stable collapsed: Boolean
  stable modifier: Modifier? = @static Companion
  stable onClick: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):CollapsibleListSeparatorHeader.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.listitem.CollapsibleListSeparatorHeader
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DisambiguationText(
  stable disambiguation: String?
  stable modifier: Modifier? = @static Companion
  stable fontWeight: FontWeight? = @static null
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LastUpdatedFooterItem(
  unstable lastUpdated: Instant
  stable modifier: Modifier? = @static Companion
  unstable now: Instant? = @dynamic System.now()
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LastUpdatedText(
  unstable lastUpdated: Instant
  stable modifier: Modifier? = @static Companion
  unstable now: Instant? = @dynamic System.now()
)
fun formatLastUpdatedPeriod(
  unstable period: DateTimePeriod
): String
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LifeSpanText(
  lifeSpan: LifeSpanUiModel?
  stable heading: String
  stable modifier: Modifier? = @static Companion
  stable beginHeading: String? = @static ""
  stable endHeading: String? = @static ""
  stable filterText: String? = @static ""
)
fun listItemColors(
  stable isSelected: Boolean
): ListItemColors
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ListSeparatorHeader(
  stable text: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun SwipeToDeleteListItem(
  stable modifier: Modifier? = @static Companion
  stable disable: Boolean = @static false
  stable onDelete: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):SwipeToDeleteListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.listitem.SwipeToDeleteListItem
  stable content: @[ExtensionFunctionType] Function3<RowScope, Composer, Int, Unit>? = @static ComposableSingletons$SwipeToDeleteListItemKt.lambda$1622323500
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun SwipeToDeleteListItem(
  stable onDelete: Function0<Unit>
  stable modifier: Modifier? = @static Companion
  stable dismissContent: @[ExtensionFunctionType] Function3<RowScope, Composer, Int, Unit>? = @static ComposableSingletons$SwipeToDeleteListItemKt.lambda$9379904
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SwipeToDeleteBackground(
  stable alignment: Alignment
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun FooterLoadingIndicator()
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun ScreenWithPagingLoadingAndError(
  lazyPagingItems: LazyPagingItems<T>
  stable modifier: Modifier? = @static Companion
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable customNoResultsText: String? = @static ""
  stable keyed: Boolean = @static false
  stable itemContent: @[ExtensionFunctionType] Function4<LazyItemScope, @[ParameterName(name = 'value')] T?, Composer, Int, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CoordinateListItem(
  coordinates: CoordinatesUiModel
  stable modifier: Modifier? = @static Companion
  stable label: String? = @static null
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PlaceListItem(
  place: PlaceListItemModel
  stable modifier: Modifier? = @static Companion
  stable onPlaceClick: @[ExtensionFunctionType] Function1<PlaceListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):PlaceListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.place.PlaceListItem
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):PlaceListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.place.PlaceListItem
  stable isSelected: Boolean = @static false
)
fun present(
  stable <this>: PlacesListPresenter
): PlacesListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RecordingListItem(
  recording: RecordingListItemModel
  stable modifier: Modifier? = @static Companion
  stable onRecordingClick: @[ExtensionFunctionType] Function1<RecordingListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):RecordingListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.recording.RecordingListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):RecordingListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.recording.RecordingListItem
)
fun present(
  stable <this>: RecordingsListPresenter
): RecordingsListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RelationListItem(
  relation: RelationListItemModel
  stable modifier: Modifier? = @static Companion
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):RelationListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.relation.RelationListItem
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RelationsListScreen(
  lazyPagingItems: LazyPagingItems<RelationListItemModel>
  stable modifier: Modifier? = @static Companion
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):RelationsListScreen.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.relation.RelationsListScreen
)
fun present(
  stable <this>: RelationsPresenterImpl
): RelationsUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun UrlListItem(
  relation: RelationListItemModel
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseListItem(
  release: ReleaseListItemModel
  stable modifier: Modifier? = @static Companion
  stable showMoreInfo: Boolean = @static true
  unstable requestForMissingCoverArtUrl: SuspendFunction0<Unit>? = @dynamic $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ReleaseListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.release.ReleaseListItem
  stable onClick: @[ExtensionFunctionType] Function1<ReleaseListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ReleaseListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.release.ReleaseListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ReleaseListItem.kt#9igjgp")
val tmp2_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp2_group@ly.david.musicsearch.ui.common.release.ReleaseListItem
)
fun present(
  stable <this>: ReleasesListPresenter
): ReleasesListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseGroupListItem(
  releaseGroup: ReleaseGroupListItemModel
  stable showType: Boolean
  stable modifier: Modifier? = @static Companion
  unstable requestForMissingCoverArtUrl: SuspendFunction0<Unit>? = @dynamic $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ReleaseGroupListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.releasegroup.ReleaseGroupListItem
  stable onClick: @[ExtensionFunctionType] Function1<ReleaseGroupListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ReleaseGroupListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.releasegroup.ReleaseGroupListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ReleaseGroupListItem.kt#9igjgp")
val tmp2_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp2_group@ly.david.musicsearch.ui.common.releasegroup.ReleaseGroupListItem
)
fun present(
  stable <this>: ReleaseGroupsListPresenter
): ReleaseGroupsListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SeriesListItem(
  series: SeriesListItemModel
  stable modifier: Modifier? = @static Companion
  stable onSeriesClick: @[ExtensionFunctionType] Function1<SeriesListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):SeriesListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.series.SeriesListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):SeriesListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.series.SeriesListItem
)
fun present(
  stable <this>: SeriesListPresenter
): SeriesListUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TextWithHeading(
  stable heading: String
  stable text: String
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AddToCollectionMenuItem(
  <this>: OverflowMenuScope
  stable entity: MusicBrainzEntity
  stable entityId: String
  stable overlayHost: OverlayHost
  unstable coroutineScope: CoroutineScope
  stable snackbarHostState: SnackbarHostState
  stable onLoginClick: Function0<Unit>
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CopyToClipboardMenuItem(
  <this>: OverflowMenuScope
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
scheme("[androidx.compose.ui.UiComposable]") fun Dot(
  stable alpha: Float
)
fun animateAlphaWithDelay(
  stable delay: Int
): State<Float>
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DotsFlashing(
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EditToggle(
  stable topAppBarEditState: TopAppBarEditState
  stable modifier: Modifier? = @static Companion
  stable includeTextSeparately: Boolean = @static false
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun OpenInBrowserMenuItem(
  <this>: OverflowMenuScope
  stable url: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RefreshMenuItem(
  <this>: OverflowMenuScope
  stable onClick: Function0<Unit>
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable]]") fun ScrollableTopAppBar(
  stable modifier: Modifier? = @static Companion
  stable onBack: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):ScrollableTopAppBar.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.topappbar.ScrollableTopAppBar
  stable showBackButton: Boolean = @static true
  stable entity: MusicBrainzEntity? = @static null
  stable title: String? = @static ""
  stable subtitle: String? = @static ""
  stable scrollBehavior: TopAppBarScrollBehavior? = @static null
  stable isEditMode: Boolean = @static false
  stable actions: Function2<Composer, Int, Unit>? = @static ComposableSingletons$ScrollableTopAppBarKt.lambda$-1946581546
  stable overflowDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
  stable subtitleDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
  stable additionalBar: Function2<Composer, Int, Unit>? = @static ComposableSingletons$ScrollableTopAppBarKt.lambda$-2134615417
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun TitleAndSubtitle(
  stable title: String
  stable entity: MusicBrainzEntity? = @static null
  stable subtitle: String? = @static ""
  stable subtitleDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun SubtitleWithOverflow(
  stable subtitle: String? = @static ""
  stable subtitleDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun OverflowMenu(
  stable overflowDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TabsBar(
  stable modifier: Modifier? = @static Companion
  unstable tabsTitle: List<String>? = @static listOf()
  stable selectedTabIndex: Int = @static 0
  stable onSelectTabIndex: Function1<Int, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):TabsBar.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     it  :   Int   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.topappbar.TabsBar
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ToggleMenuItem(
  <this>: OverflowMenuScope
  stable toggleOnText: String
  stable toggleOffText: String
  stable toggled: Boolean
  stable onToggle: Function1<Boolean, Unit>
  stable modifier: Modifier? = @static Companion
)
fun rememberTopAppBarEditState(
  stable initialIsEditMode: Boolean = @static false
  stable initialCustomTitle: String? = @static ""
): TopAppBarEditState
fun rememberTopAppBarFilterState(
  stable initialFilterText: String? = @static ""
  stable initialIsFilterMode: Boolean = @static false
): TopAppBarFilterState
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable]]") fun TopAppBarWithFilterInternal(
  stable modifier: Modifier? = @static Companion
  stable onBack: Function0<Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):TopAppBarWithFilter.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.topappbar.TopAppBarWithFilterInternal
  stable showBackButton: Boolean = @static true
  stable entity: MusicBrainzEntity? = @static null
  stable title: String? = @static ""
  stable subtitle: String? = @static ""
  stable scrollBehavior: TopAppBarScrollBehavior? = @static null
  stable overflowDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
  stable subtitleDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static null
  stable topAppBarFilterState: TopAppBarFilterState? = @dynamic TopAppBarFilterState()
  stable topAppBarEditState: TopAppBarEditState? = @dynamic TopAppBarEditState()
  stable additionalActions: Function2<Composer, Int, Unit>? = @static ComposableSingletons$TopAppBarWithFilterKt.lambda$837430568
  stable additionalBar: Function2<Composer, Int, Unit>? = @static ComposableSingletons$TopAppBarWithFilterKt.lambda$638380242
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TrackListItem(
  track: TrackListItemModel
  stable modifier: Modifier? = @static Companion
  stable onRecordingClick: Function2<@[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):TrackListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   String  ,   <unused var>  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.track.TrackListItem
)
fun present(
  stable <this>: TracksByReleasePresenter
): TracksByReleaseUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun WikipediaSection(
  extract: WikipediaExtract
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun WorkListItem(
  work: WorkListItemModel
  stable modifier: Modifier? = @static Companion
  stable onWorkClick: @[ExtensionFunctionType] Function1<WorkListItemModel, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):WorkListItem.kt#9igjgp")
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceGroup()
tmp0_group@ly.david.musicsearch.ui.common.work.WorkListItem
  stable isSelected: Boolean = @static false
  stable onSelect: Function1<String, Unit>? = @static $composer.startReplaceGroup(1849434622)
sourceInformation($composer, "CC(remember):WorkListItem.kt#9igjgp")
val tmp1_group = $composer.cache(false) {
  {     it  :   String   ->

  }

}

$composer.endReplaceGroup()
tmp1_group@ly.david.musicsearch.ui.common.work.WorkListItem
)
fun present(
  stable <this>: WorksListPresenter
): WorksListUiState
