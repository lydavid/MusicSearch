stable class ArtistsByEntityPresenter {
  runtime val getArtistsByEntity: GetArtistsByEntity
  <runtime stability> = Stable
}
stable class Get {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class ArtistsByEntityUiState {
  runtime val lazyPagingItems: LazyPagingItems<ArtistListItemModel>
  stable val lazyListState: LazyListState
  stable val showMoreInfo: Boolean
  stable val eventSink: Function1<ArtistsByEntityUiEvent, Unit>
}
stable class EventsByEntityPresenter {
  runtime val getEventsByEntity: GetEventsByEntity
  <runtime stability> = Stable
}
stable class Get {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class EventsByEntityUiState {
  runtime val lazyPagingItems: LazyPagingItems<EventListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<EventsByEntityUiEvent, Unit>
}
stable class LabelsByEntityPresenter {
  runtime val getLabelsByEntity: GetLabelsByEntity
  <runtime stability> = Stable
}
stable class Get {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class LabelsByEntityUiState {
  runtime val lazyPagingItems: LazyPagingItems<LabelListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<LabelsByEntityUiEvent, Unit>
}
stable class State {
  stable val entityId: String
  stable val query: String
  <runtime stability> = Stable
}
unstable class RelationsList {
  runtime val getEntityRelationships: GetEntityRelationships
  unstable val entityId: MutableStateFlow<String>
  unstable val query: MutableStateFlow<String>
  unstable val paramState: Flow<State>
  unstable var scope: CoroutineScope
  stable var entity: MusicBrainzEntity
  unstable val pagedRelations$delegate: Lazy<Flow<PagingData<RelationListItemModel>>>
  <runtime stability> = Unstable
}
stable class PlacesByEntityPresenter {
  runtime val getPlacesByEntity: GetPlacesByEntity
  <runtime stability> = Stable
}
stable class Get {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class PlacesByEntityUiState {
  runtime val lazyPagingItems: LazyPagingItems<PlaceListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<PlacesByEntityUiEvent, Unit>
}
stable class RecordingsByEntityPresenter {
  runtime val getRecordingsByEntity: GetRecordingsByEntity
  <runtime stability> = Stable
}
stable class Get {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class RecordingsByEntityUiState {
  runtime val lazyPagingItems: LazyPagingItems<RecordingListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<RecordingsByEntityUiEvent, Unit>
}
stable class RelationsPresenter {
  runtime val getEntityRelationships: GetEntityRelationships
  <runtime stability> = Stable
}
stable class GetRelations {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class RelationsUiState {
  runtime val lazyPagingItems: LazyPagingItems<RelationListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<RelationsUiEvent, Unit>
}
stable class ReleasesByEntityPresenter {
  runtime val getReleasesByEntity: GetReleasesByEntity
  unstable val appPreferences: AppPreferences
  unstable val releaseImageRepository: ReleaseImageRepository
  unstable val logger: Logger
  <runtime stability> = Stable
}
stable class Get {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class UpdateShowMoreInfoInReleaseListItem {
  stable val showMore: Boolean
  <runtime stability> = Stable
}
stable class RequestForMissingCoverArtUrl {
  stable val entityId: String
  <runtime stability> = Stable
}
stable class ReleasesByEntityUiState {
  runtime val lazyPagingItems: LazyPagingItems<ReleaseListItemModel>
  stable val lazyListState: LazyListState
  stable val showMoreInfo: Boolean
  stable val eventSink: Function1<ReleasesByEntityUiEvent, Unit>
}
stable class ReleaseGroupsByEntityPresenter {
  runtime val getReleaseGroupsByEntity: GetReleaseGroupsByEntity
  unstable val appPreferences: AppPreferences
  unstable val releaseGroupImageRepository: ReleaseGroupImageRepository
  unstable val logger: Logger
  <runtime stability> = Stable
}
stable class Get {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class UpdateSortReleaseGroupListItem {
  stable val sort: Boolean
  <runtime stability> = Stable
}
stable class RequestForMissingCoverArtUrl {
  stable val entityId: String
  <runtime stability> = Stable
}
stable class ReleaseGroupsByEntityUiState {
  runtime val lazyPagingItems: LazyPagingItems<ListItemModel>
  stable val lazyListState: LazyListState
  stable val sort: Boolean
  stable val eventSink: Function1<ReleaseGroupsByEntityUiEvent, Unit>
}
stable class SearchScreen {
  stable val query: String?
  stable val entity: MusicBrainzEntity?
  <runtime stability> = Stable
}
stable class ArtistCollaborationScreen {
  stable val id: String
  stable val name: String
  <runtime stability> = Stable
}
stable class HistoryScreen {
  <runtime stability> = Stable
}
stable class CollectionListScreen {
  <runtime stability> = Stable
}
stable class CollectionScreen {
  stable val id: String
  <runtime stability> = Stable
}
stable class AddToCollectionScreen {
  stable val entity: MusicBrainzEntity
  stable val id: String
  <runtime stability> = Stable
}
stable class DetailsScreen {
  stable val entity: MusicBrainzEntity
  stable val id: String
  stable val title: String?
  <runtime stability> = Stable
}
stable class CoverArtsScreen {
  stable val id: String
  <runtime stability> = Stable
}
stable class StatsScreen {
  stable val entity: MusicBrainzEntity
  stable val id: String
  unstable val tabs: List<Tab>
  <runtime stability> = Stable
}
stable class SettingsScreen {
  <runtime stability> = Stable
}
stable class LicensesScreen {
  <runtime stability> = Stable
}
stable class NowPlayingHistoryScreen {
  <runtime stability> = Stable
}
stable class SpotifyHistoryScreen {
  <runtime stability> = Stable
}
stable class TopAppBarFilterState {
  stable var filterText$delegate: MutableState<String>
  stable var isFilterMode$delegate: MutableState<Boolean>
}
stable class TracksByReleasePresenter {
  runtime val getTracksByRelease: GetTracksByRelease
  <runtime stability> = Stable
}
stable class TracksByReleaseUiState {
  runtime val lazyPagingItems: LazyPagingItems<ListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<TracksByEntityUiEvent, Unit>
}
stable class Get {
  stable val byEntityId: String
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class WorksByEntityPresenter {
  runtime val getWorksByEntity: GetWorksByEntity
  <runtime stability> = Stable
}
stable class Get {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class WorksByEntityUiState {
  runtime val lazyPagingItems: LazyPagingItems<WorkListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<WorksByEntityUiEvent, Unit>
}
unstable class ArtistPreviewParameterProvider {
  unstable val values: Sequence<ArtistListItemModel>
  <runtime stability> = Unstable
}
unstable class EventPreviewParameterProvider {
  unstable val values: Sequence<EventListItemModel>
  <runtime stability> = Unstable
}
unstable class InstrumentCardPreviewParameterProvider {
  unstable val values: Sequence<InstrumentListItemModel>
  <runtime stability> = Unstable
}
stable class LabelCardPreviewParameterProvider {
  <runtime stability> = Stable
}
unstable class LifeSpanPreviewParameterProvider {
  unstable val values: Sequence<LifeSpanUiModel>
  <runtime stability> = Unstable
}
unstable class PlacePreviewParameterProvider {
  unstable val values: Sequence<PlaceListItemModel>
  <runtime stability> = Unstable
}
unstable class RecordingPreviewParameterProvider {
  unstable val values: Sequence<RecordingListItemModel>
  <runtime stability> = Unstable
}
unstable class TrackCardPreviewParameterProvider {
  unstable val values: Sequence<TrackListItemModel>
  <runtime stability> = Unstable
}
unstable class SeriesPreviewParameterProvider {
  unstable val values: Sequence<SeriesListItemModel>
  <runtime stability> = Unstable
}
