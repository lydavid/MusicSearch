unstable class LifeSpanPreviewParameterProvider {
  unstable val values: Sequence<LifeSpanUiModel>
  <runtime stability> = Unstable
}
stable class LoginPresenterAndroid {
  unstable val musicBrainzLoginActivityResultContract: MusicBrainzLoginActivityResultContract
  unstable val login: LoginAndroid
  <runtime stability> = Stable
}
stable class AreasListPresenter {
  unstable val getAreas: GetAreas
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class AreasListUiState {
  unstable val pagingDataFlow: Flow<PagingData<AreaListItemModel>>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<AreasListUiEvent, Unit>
}
stable class ArtistsListPresenter {
  runtime val getArtists: GetArtists
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class ArtistsListUiState {
  runtime val lazyPagingItems: LazyPagingItems<ArtistListItemModel>
  stable val lazyListState: LazyListState
  stable val showMoreInfo: Boolean
  stable val eventSink: Function1<ArtistsListUiEvent, Unit>
}
stable class EventsListPresenter {
  runtime val getEvents: GetEvents
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class EventsListUiState {
  runtime val lazyPagingItems: LazyPagingItems<EventListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<EventsListUiEvent, Unit>
}
stable class GenresListPresenter {
  runtime val getGenres: GetGenres
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class GenresListUiState {
  runtime val lazyPagingItems: LazyPagingItems<GenreListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<GenresListUiEvent, Unit>
}
stable class InstrumentsListPresenter {
  runtime val getInstruments: GetInstruments
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class InstrumentsListUiState {
  runtime val lazyPagingItems: LazyPagingItems<InstrumentListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<InstrumentsListUiEvent, Unit>
}
stable class LabelsListPresenter {
  runtime val getLabels: GetLabels
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class LabelsListUiState {
  runtime val lazyPagingItems: LazyPagingItems<LabelListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<LabelsListUiEvent, Unit>
}
stable class StartLogin {
  <runtime stability> = Stable
}
stable class DismissDialog {
  <runtime stability> = Stable
}
stable class SubmitAuthCode {
  stable val authCode: String
  <runtime stability> = Stable
}
stable class LoginUiState {
  stable val showDialog: Boolean
  stable val eventSink: Function1<LoginUiEvent, Unit>
  <runtime stability> = Stable
}
stable class PlacesListPresenter {
  runtime val getPlaces: GetPlaces
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class PlacesListUiState {
  runtime val lazyPagingItems: LazyPagingItems<PlaceListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<PlacesListUiEvent, Unit>
}
stable class RecordingsListPresenter {
  runtime val getRecordings: GetRecordings
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class RecordingsListUiState {
  runtime val lazyPagingItems: LazyPagingItems<RecordingListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<RecordingsListUiEvent, Unit>
}
stable class RelationsPresenterImpl {
  runtime val getEntityRelationships: GetEntityRelationships
  <runtime stability> = Stable
}
stable class GetRelations {
  stable val byEntityId: String
  stable val byEntity: MusicBrainzEntity
  unstable val relatedEntities: Set<MusicBrainzEntity>
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class RelationsUiState {
  runtime val lazyPagingItems: LazyPagingItems<RelationListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<RelationsUiEvent, Unit>
}
stable class ReleasesListPresenter {
  runtime val getReleases: GetReleases
  unstable val appPreferences: AppPreferences
  unstable val imageMetadataRepository: ImageMetadataRepository
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class UpdateShowMoreInfoInReleaseListItem {
  stable val showMore: Boolean
  <runtime stability> = Stable
}
stable class RequestForMissingCoverArtUrl {
  stable val entityId: String
  <runtime stability> = Stable
}
stable class ReleasesListUiState {
  runtime val lazyPagingItems: LazyPagingItems<ReleaseListItemModel>
  stable val lazyListState: LazyListState
  stable val showMoreInfo: Boolean
  stable val eventSink: Function1<ReleasesListUiEvent, Unit>
}
stable class ReleaseGroupsListPresenter {
  runtime val getReleaseGroups: GetReleaseGroups
  unstable val appPreferences: AppPreferences
  unstable val imageMetadataRepository: ImageMetadataRepository
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class UpdateSortReleaseGroupListItem {
  stable val sort: Boolean
  <runtime stability> = Stable
}
stable class RequestForMissingCoverArtUrl {
  stable val entityId: String
  <runtime stability> = Stable
}
stable class ReleaseGroupsListUiState {
  runtime val lazyPagingItems: LazyPagingItems<ListItemModel>
  stable val lazyListState: LazyListState
  stable val sort: Boolean
  stable val eventSink: Function1<ReleaseGroupsListUiEvent, Unit>
}
stable class SearchScreen {
  stable val query: String?
  stable val entity: MusicBrainzEntity?
  <runtime stability> = Stable
}
stable class ArtistCollaborationScreen {
  stable val id: String
  stable val name: String
  <runtime stability> = Stable
}
stable class DatabaseScreen {
  <runtime stability> = Stable
}
stable class AllEntitiesScreen {
  stable val entity: MusicBrainzEntity
  <runtime stability> = Stable
}
stable class HistoryScreen {
  <runtime stability> = Stable
}
stable class CollectionListScreen {
  stable val newCollectionId: String?
  stable val newCollectionName: String?
  stable val newCollectionEntity: MusicBrainzEntity?
  <runtime stability> = Stable
}
stable class CollectionScreen {
  stable val collectionId: String
  stable val collectableId: String?
  <runtime stability> = Stable
}
stable class AddToCollectionScreen {
  stable val entity: MusicBrainzEntity
  stable val id: String
  <runtime stability> = Stable
}
stable class SnackbarPopResult {
  stable val message: String
  stable val actionLabel: String?
  <runtime stability> = Stable
}
stable class DetailsScreen {
  stable val entity: MusicBrainzEntity
  stable val id: String
  stable val title: String?
  <runtime stability> = Stable
}
stable class CoverArtsScreen {
  stable val id: String?
  <runtime stability> = Stable
}
stable class StatsScreen {
  stable val entity: MusicBrainzEntity
  stable val id: String
  unstable val tabs: List<Tab>
  <runtime stability> = Stable
}
stable class SettingsScreen {
  <runtime stability> = Stable
}
stable class LicensesScreen {
  <runtime stability> = Stable
}
stable class NowPlayingHistoryScreen {
  <runtime stability> = Stable
}
stable class SpotifyHistoryScreen {
  <runtime stability> = Stable
}
stable class SeriesListPresenter {
  runtime val getSeries: GetSeries
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class SeriesListUiState {
  runtime val lazyPagingItems: LazyPagingItems<SeriesListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<SeriesListUiEvent, Unit>
}
stable class TopAppBarEditState {
  stable val showEditIcon: Boolean
  stable var isEditMode$delegate: MutableState<Boolean>
}
stable class TopAppBarFilterState {
  stable var filterText$delegate: MutableState<String>
  stable var isFilterMode$delegate: MutableState<Boolean>
  stable var show$delegate: MutableState<Boolean>
}
stable class TracksByReleasePresenter {
  runtime val getTracksByRelease: GetTracksByRelease
  <runtime stability> = Stable
}
stable class TracksByReleaseUiState {
  runtime val lazyPagingItems: LazyPagingItems<ListItemModel>
  stable val lazyListState: LazyListState
  unstable val collapsedMediumIds: Set<Long>
  stable val eventSink: Function1<TracksByEntityUiEvent, Unit>
}
stable class Get {
  stable val byEntityId: String
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class ToggleMedium {
  stable val id: String
  <runtime stability> = Stable
}
stable class WorksListPresenter {
  runtime val getWorks: GetWorks
  <runtime stability> = Stable
}
stable class Get {
  runtime val browseMethod: BrowseMethod
  stable val isRemote: Boolean
  <runtime stability> = Stable
}
stable class UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class WorksListUiState {
  runtime val lazyPagingItems: LazyPagingItems<WorkListItemModel>
  stable val lazyListState: LazyListState
  stable val eventSink: Function1<WorksListUiEvent, Unit>
}
