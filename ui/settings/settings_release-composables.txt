restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun DevSettingsSection()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SettingsScaffold(
  stable modifier: Modifier? = @static Companion
  stable onDestinationClick: Function1<Destination, Unit>? = @static { it: Destination ->

}

  stable onLoginClick: Function0<Unit>? = @static {

}

  stable onLogoutClick: Function0<Unit>? = @static {

}

  stable showMoreInfoInReleaseListItem: Boolean = @static true
  stable onShowMoreInfoInReleaseListItemChange: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

  stable sortReleaseGroupListItems: Boolean = @static false
  stable onSortReleaseGroupListItemsChange: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

  unstable viewModel: SettingsViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SettingsScreen(
  stable modifier: Modifier? = @static Companion
  stable username: String? = @static ""
  stable showLogin: Boolean = @static true
  stable onLoginClick: Function0<Unit>? = @static {

}

  stable onLogoutClick: Function0<Unit>? = @static {

}

  stable onDestinationClick: Function1<Destination, Unit>? = @static { it: Destination ->

}

  stable theme: Theme? = @static Theme.SYSTEM
  stable onThemeChange: Function1<Theme, Unit>? = @static { it: Theme ->

}

  stable useMaterialYou: Boolean = @static true
  stable onUseMaterialYouChange: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

  stable showMoreInfoInReleaseListItem: Boolean = @static true
  stable onShowMoreInfoInReleaseListItemChange: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

  stable sortReleaseGroupListItems: Boolean = @static false
  stable onSortReleaseGroupListItemsChange: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

  stable isNotificationListenerEnabled: Boolean = @static false
  stable onGoToNotificationListenerSettings: Function0<Unit>? = @static {

}

  stable versionName: String? = @static ""
  stable versionCode: Int = @static 0
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSettingsScreen()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSettingsScreenNotificationListenerEnable()
fun useDarkTheme(
  <this>: AppPreferences
): Boolean
fun useMaterialYou(
  <this>: AppPreferences
): Boolean
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ProfileCard(
  stable username: String
  stable showLogin: Boolean
  stable onLoginClick: Function0<Unit>? = @static {

}

  stable onLogoutClick: Function0<Unit>? = @static {

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewProfileCardLoggedOut()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewProfileCardLoggedIn()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewProfileCardLoggedInWaitingForUsername()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SettingSwitch(
  stable header: String
  stable checked: Boolean
  stable modifier: Modifier? = @static Companion
  stable onCheckedChange: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSettingSwitchChecked()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSettingSwitchUnchecked()
restartable scheme("[androidx.compose.ui.UiComposable]") fun SettingWithDialogChoices(
  stable titleRes: Int
  unstable choices: List<String>
  stable selectedChoiceIndex: Int
  stable onSelectChoiceIndex: Function1<Int, Unit>? = @static { it: Int ->

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LicensesScaffold(
  stable modifier: Modifier? = @static Companion
  stable onBack: Function0<Unit>? = @static {

}

)
