import kotlin.Int;

CREATE TABLE IF NOT EXISTS `release` (
  `id` TEXT PRIMARY KEY NOT NULL,
  `name` TEXT NOT NULL,
  `disambiguation` TEXT NOT NULL,
  `date` TEXT,
  `barcode` TEXT,
  `asin` TEXT,
  `quality` TEXT,
  `country_code` TEXT,
  `status` TEXT,
  `status_id` TEXT,
  `packaging` TEXT,
  `packaging_id` TEXT,
  `script` TEXT,
  `language` TEXT,
  `cover_art_count` INTEGER AS Int NOT NULL
);

insert:
INSERT OR IGNORE INTO `release`
VALUES ?;

deleteRelease:
DELETE FROM `release` WHERE id = :releaseId;

getReleaseForDetails:
SELECT
  `release`.*,
  (
    SELECT SUM(t.length)
    FROM track t
    INNER JOIN medium m ON t.medium_id = m.id
    INNER JOIN `release` r ON m.release_id = r.id
    WHERE r.id = :releaseId
  ) AS releaseLength,
  (
    SELECT COUNT(t.id) > 0
    FROM track t
    INNER JOIN medium m ON t.medium_id = m.id
    INNER JOIN `release` r ON m.release_id = r.id
    WHERE r.id = :releaseId
    AND t.length IS NULL
  ) AS hasNullLength
FROM `release`
WHERE `release`.id = :releaseId
LIMIT 1;

getReleaseFormatTrackCount:
SELECT m.format, COUNT(t.id) AS trackCount
FROM track t
INNER JOIN medium m ON t.medium_id = m.id
INNER JOIN `release` r ON m.release_id = r.id
WHERE r.id = :releaseId
GROUP BY m.id;
