import kotlin.time.Instant;
import ly.david.musicsearch.shared.domain.network.MusicBrainzEntity;

CREATE TABLE IF NOT EXISTS search_history (
  `entity` TEXT AS MusicBrainzEntity NOT NULL,
  `query` TEXT NOT NULL,
  `last_accessed` INTEGER AS Instant NOT NULL,

  PRIMARY KEY(`entity`, `query`)
);

upsert {
  UPDATE search_history
  SET last_accessed = :lastAccessed
  WHERE query = :query AND entity = :entity;

  INSERT OR IGNORE INTO search_history
  VALUES (
    :entity,
    :query,
    :lastAccessed
  );
}

getAllSearchHistoryCount:
SELECT COUNT(*)
FROM search_history
WHERE entity = :entity;

getAllSearchHistory:
SELECT
  entity,
  query
FROM search_history
WHERE entity = :entity
ORDER BY last_accessed DESC
LIMIT :limit OFFSET :offset;

delete:
DELETE FROM search_history
WHERE `query` = :query AND entity = :entity;

deleteAll:
DELETE FROM search_history
WHERE entity = :entity;
