CREATE TABLE IF NOT EXISTS events_by_entity (
  entity_id TEXT NOT NULL,
  event_id TEXT NOT NULL,

  PRIMARY KEY (entity_id, event_id)
);

insert:
INSERT OR IGNORE INTO events_by_entity
VALUES ?;

deleteEventsByEntity:
DELETE FROM event WHERE id IN (
  SELECT e.id
  FROM events_by_entity ee
  INNER JOIN event e ON e.id = ee.event_id
  WHERE ee.entity_id = :entityId
);

getNumberOfEventsByEntity:
SELECT IFNULL(
  (
    SELECT COUNT(*)
    FROM events_by_entity ee
    INNER JOIN event e ON e.id = ee.event_id
    WHERE ee.entity_id = :entityId
    AND (
      e.name LIKE :query OR
      e.disambiguation LIKE :query OR
      e.type LIKE :query
    )
  ),
  0
) AS count;

getEventsByEntity:
SELECT
  e.id,
  e.name,
  e.disambiguation,
  e.type,
  e.time,
  e.cancelled,
  e.begin,
  e.end,
  e.ended,
  visited.entity_id IS NOT NULL AS visited
FROM events_by_entity ee
INNER JOIN event e ON e.id = ee.event_id
LEFT JOIN visited ON visited.entity_id = e.id
WHERE ee.entity_id = :entityId
AND (
  e.name LIKE :query OR
  e.disambiguation LIKE :query OR
  e.type LIKE :query
)
ORDER BY e.begin, e.end, e.name
LIMIT :limit OFFSET :offset;
