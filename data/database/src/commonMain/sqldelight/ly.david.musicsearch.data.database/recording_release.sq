CREATE TABLE IF NOT EXISTS recording_release (
  `recording_id` TEXT NOT NULL,
  `release_id` TEXT NOT NULL,

  PRIMARY KEY(`recording_id`, `release_id`)
);

insertOrFail:
INSERT OR FAIL INTO recording_release
VALUES ?;

deleteReleasesByRecording {
DELETE FROM release WHERE id IN (
  SELECT r.id
  FROM release r
  INNER JOIN recording_release rr ON r.id = rr.release_id
  INNER JOIN recording rec ON rec.id = rr.recording_id
  WHERE rec.id = :recordingId
);

DELETE FROM recording_release WHERE recording_id = :recordingId;
}

getNumberOfReleasesByRecording:
SELECT IFNULL(
  (
    SELECT COUNT(DISTINCT r.id)
    FROM release r
    INNER JOIN recording_release rr ON r.id = rr.release_id
    INNER JOIN recording rec ON rec.id = rr.recording_id
    INNER JOIN artist_credit_entity acr ON acr.entity_id = r.id
    INNER JOIN artist_credit ac ON ac.id = acr.artist_credit_id
    WHERE rec.id = :recordingId
    AND (
      r.name LIKE :query
      OR r.disambiguation LIKE :query
      OR r.date LIKE :query
      OR r.country_code LIKE :query
      OR ac.name LIKE :query
    )
  ),
  0
) AS count;

getReleasesByRecording:
SELECT
  r.*,
  ac.name AS artistCreditNames,
  mi.thumbnail_url,
  mi.id AS placeholderKey,
  (
    SELECT COUNT(cc.area_id)
    FROM `release`
    INNER JOIN release_country rc ON rc.release_id = `release`.id
    INNER JOIN country_code cc ON cc.area_id = rc.country_id
    WHERE r.id = `release`.id
  ) AS releaseCountryCount,
  visited.entity_id IS NOT NULL AS visited
FROM `release` r
INNER JOIN recording_release rr ON r.id = rr.release_id
INNER JOIN recording rec ON rec.id = rr.recording_id
INNER JOIN artist_credit_entity acr ON acr.entity_id = r.id
INNER JOIN artist_credit ac ON ac.id = acr.artist_credit_id
LEFT JOIN mbid_image mi ON mi.mbid = r.id
LEFT JOIN visited ON visited.entity_id = r.id
WHERE rec.id = :recordingId
AND (
  r.name LIKE :query
  OR r.disambiguation LIKE :query
  OR r.date LIKE :query
  OR r.country_code LIKE :query
  OR ac.name LIKE :query
)
GROUP BY r.id
ORDER BY r.date, r.name
LIMIT :limit OFFSET :offset;
