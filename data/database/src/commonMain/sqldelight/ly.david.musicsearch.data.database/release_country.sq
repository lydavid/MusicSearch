CREATE TABLE IF NOT EXISTS release_country (
  `release_id` TEXT NOT NULL,
  `country_id` TEXT NOT NULL,
  `date` TEXT,
  
  PRIMARY KEY(`release_id`, `country_id`)
  
--   FOREIGN KEY(`release_id`) REFERENCES `release`(`id`)
--   ON UPDATE CASCADE
--   ON DELETE CASCADE
);

insert:
INSERT OR IGNORE INTO release_country
VALUES ?;


-- countries by release

getCountriesByRelease:
SELECT a.id, a.name, rc.date, cc.code
FROM area a
INNER JOIN release_country rc ON rc.country_id = a.id
INNER JOIN `release` r ON r.id = rc.release_id
LEFT JOIN country_code cc ON cc.area_id = a.id
WHERE r.id = :releaseId
ORDER BY a.name;


-- releases by country

deleteReleaseCountryLinks:
DELETE FROM release_country WHERE country_id = :areaId;

getNumberOfReleasesByCountry:
SELECT IFNULL(
  (
    SELECT COUNT(*)
    FROM release r
    INNER JOIN release_country rc ON r.id = rc.release_id
    INNER JOIN area a ON a.id = rc.country_id
    INNER JOIN artist_credit_entity acr ON acr.entity_id = r.id
    INNER JOIN artist_credit ac ON ac.id = acr.artist_credit_id
    WHERE a.id = :areaId
    AND (
      r.name LIKE :query
      OR r.disambiguation LIKE :query
      OR r.date LIKE :query
      OR r.country_code LIKE :query
      OR ac.name LIKE :query
    )
  ),
  0
) AS count;

getReleasesByCountry:
SELECT r.*, ac.name AS artist_credits, mi.thumbnail_url
FROM release r
INNER JOIN release_country rc ON r.id = rc.release_id
INNER JOIN area a ON a.id = rc.country_id
INNER JOIN artist_credit_entity acr ON acr.entity_id = r.id
INNER JOIN artist_credit ac ON ac.id = acr.artist_credit_id
LEFT JOIN mbid_image mi ON mi.mbid = r.id
WHERE a.id = :areaId
AND (
  r.name LIKE :query
  OR r.disambiguation LIKE :query
  OR r.date LIKE :query
  OR r.country_code LIKE :query
  OR ac.name LIKE :query
)
ORDER BY r.date, r.name
LIMIT :limit OFFSET :offset;

deleteReleasesByCountry:
DELETE FROM release WHERE id IN (
  SELECT r.id
  FROM release r
  INNER JOIN release_country rc ON r.id = rc.release_id
  INNER JOIN area a ON a.id = rc.country_id
  WHERE a.id = :areaId
);
