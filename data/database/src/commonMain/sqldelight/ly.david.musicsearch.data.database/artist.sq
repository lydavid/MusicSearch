import kotlin.Boolean;

CREATE TABLE IF NOT EXISTS artist (
  id TEXT PRIMARY KEY NOT NULL,
  name TEXT NOT NULL,
  sort_name TEXT NOT NULL,
  disambiguation TEXT,
  type TEXT,
  type_id TEXT,
  gender TEXT,
  country_code TEXT,
  begin TEXT,
  end TEXT,
  ended INTEGER AS Boolean
);

insert:
INSERT OR IGNORE INTO artist
VALUES ?;

getArtistForDetails:
SELECT
  a.id,
  a.name,
  a.sort_name,
  a.disambiguation,
  a.type,
  a.gender,
  a.country_code,
  a.begin,
  a.end,
  a.ended,
  mi.large_url
FROM artist a
LEFT JOIN mbid_image mi ON mi.mbid = a.id
WHERE a.id = :artistId
GROUP BY a.id;

delete:
DELETE FROM artist
WHERE id = :artistId;

getAllCollaboratingArtists:
SELECT
acn.artist_id AS collaborating_artist_id,
acn.name AS name,
COUNT(*) AS collaboration_count
FROM recordings_by_entity re
INNER JOIN recording r ON r.id = re.recording_id
INNER JOIN artist_credit_entity acr ON acr.entity_id = r.id
INNER JOIN artist_credit ac ON ac.id = acr.artist_credit_id
INNER JOIN artist_credit_name acn ON acn.artist_credit_id = ac.id
WHERE re.entity_id = :artistId
AND acn.artist_id != :artistId
GROUP BY collaborating_artist_id;
