CREATE TABLE IF NOT EXISTS instrument (
  id TEXT PRIMARY KEY NOT NULL,
  name TEXT NOT NULL,
  disambiguation TEXT,
  description TEXT,
  type TEXT,
  type_id TEXT
);

insert:
INSERT OR IGNORE INTO instrument
VALUES ?;

getInstrumentForDetails:
SELECT
  id,
  name,
  disambiguation,
  description,
  type,
  details_metadata.last_updated
FROM instrument
LEFT JOIN details_metadata ON details_metadata.entity_id = id
WHERE id = :instrumentId;

delete:
DELETE FROM instrument
WHERE id = :id;

-- instruments by collection

getNumberOfInstrumentsByCollection:
SELECT IFNULL(
  (
    SELECT COUNT(DISTINCT instrument.id)
    FROM instrument
    INNER JOIN collection_entity ce ON instrument.id = ce.entity_id
    INNER JOIN collection c ON c.id = ce.id
    LEFT JOIN alias ON instrument.id = alias.mbid
    WHERE c.id = :collectionId
    AND ce.deleted = 0
    AND (
      instrument.name LIKE :query OR
      instrument.disambiguation LIKE :query OR
      instrument.type LIKE :query OR
      instrument.description LIKE :query OR
      alias.name LIKE :query
    )
  ),
  0
) AS count;

getInstrumentsByCollection:
SELECT
  instrument.id,
  instrument.name,
  instrument.disambiguation,
  instrument.description,
  instrument.type,
  details_metadata.entity_id IS NOT NULL AS visited
FROM instrument
INNER JOIN collection_entity ce ON instrument.id = ce.entity_id
INNER JOIN collection c ON c.id = ce.id
LEFT JOIN alias ON instrument.id = alias.mbid
LEFT JOIN details_metadata ON details_metadata.entity_id = instrument.id
WHERE c.id = :collectionId
AND ce.deleted = 0
AND (
  instrument.name LIKE :query OR
  instrument.disambiguation LIKE :query OR
  instrument.type LIKE :query OR
  instrument.description LIKE :query OR
  alias.name LIKE :query
)
GROUP BY instrument.id
LIMIT :limit OFFSET :offset;

-- all instruments

getCountOfAllInstruments:
SELECT IFNULL(
  (
    SELECT COUNT(DISTINCT instrument.id)
    FROM instrument
    LEFT JOIN alias ON instrument.id = alias.mbid
    WHERE (
      instrument.name LIKE :query OR
      instrument.disambiguation LIKE :query OR
      instrument.type LIKE :query OR
      instrument.description LIKE :query OR
      alias.name LIKE :query
    )
  ),
  0
) AS count;

getAllInstruments:
SELECT
  instrument.id,
  instrument.name,
  instrument.disambiguation,
  instrument.description,
  instrument.type,
  details_metadata.entity_id IS NOT NULL AS visited
FROM instrument
LEFT JOIN alias ON instrument.id = alias.mbid
LEFT JOIN details_metadata ON details_metadata.entity_id = instrument.id
WHERE (
  instrument.name LIKE :query OR
  instrument.disambiguation LIKE :query OR
  instrument.type LIKE :query OR
  instrument.description LIKE :query OR
  alias.name LIKE :query
)
GROUP BY instrument.id
LIMIT :limit OFFSET :offset;
