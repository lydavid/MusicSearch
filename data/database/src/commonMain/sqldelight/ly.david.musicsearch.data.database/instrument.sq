CREATE TABLE IF NOT EXISTS instrument (
  id TEXT PRIMARY KEY NOT NULL,
  name TEXT NOT NULL,
  disambiguation TEXT,
  description TEXT,
  type TEXT,
  type_id TEXT
);

insert:
INSERT OR IGNORE INTO instrument
VALUES ?;

getInstrument:
SELECT
  id,
  name,
  disambiguation,
  description,
  type
FROM instrument WHERE id = ?;

delete:
DELETE FROM instrument
WHERE id = :id;

-- instruments by collection

getNumberOfInstrumentsByCollection:
SELECT IFNULL(
  (
    SELECT COUNT(*)
    FROM instrument i
    INNER JOIN collection_entity ce ON i.id = ce.entity_id
    INNER JOIN collection c ON c.id = ce.id
    WHERE c.id = :collectionId
    AND ce.deleted = 0
    AND (
      i.name LIKE :query OR
      i.disambiguation LIKE :query OR
      i.type LIKE :query OR
      i.description LIKE :query
    )
  ),
  0
) AS count;

getInstrumentsByCollection:
SELECT
  i.id,
  i.name,
  i.disambiguation,
  i.description,
  i.type,
  visited.entity_id IS NOT NULL AS visited
FROM instrument i
INNER JOIN collection_entity ce ON i.id = ce.entity_id
INNER JOIN collection c ON c.id = ce.id
LEFT JOIN visited ON visited.entity_id = i.id
WHERE c.id = :collectionId
AND ce.deleted = 0
AND (
  i.name LIKE :query OR
  i.disambiguation LIKE :query OR
  i.type LIKE :query OR
  i.description LIKE :query
)
LIMIT :limit OFFSET :offset;

-- all instruments

getCountOfAllInstruments:
SELECT IFNULL(
  (
    SELECT COUNT(*)
    FROM instrument i
    WHERE (
      i.name LIKE :query OR
      i.disambiguation LIKE :query OR
      i.type LIKE :query OR
      i.description LIKE :query
    )
  ),
  0
) AS count;

getAllInstruments:
SELECT
  i.id,
  i.name,
  i.disambiguation,
  i.description,
  i.type,
  visited.entity_id IS NOT NULL AS visited
FROM instrument i
LEFT JOIN visited ON visited.entity_id = i.id
WHERE (
  i.name LIKE :query OR
  i.disambiguation LIKE :query OR
  i.type LIKE :query OR
  i.description LIKE :query
)
LIMIT :limit OFFSET :offset;
