import kotlin.Int;
import kotlinx.datetime.Instant;

CREATE TABLE IF NOT EXISTS spotify_history (
  `track_id` TEXT PRIMARY KEY NOT NULL,
  `artist_name` TEXT,
  `album_name` TEXT,
  `track_name` TEXT,
  `track_length` INTEGER AS Int,
  `number_of_listens` INTEGER AS Int NOT NULL,
  `last_listened` INTEGER AS Instant NOT NULL
);

upsert {
  UPDATE spotify_history
  SET artist_name = :artistName,
    album_name = :albumName,
    track_name = :trackName,
    track_length = :trackLength,
    number_of_listens = number_of_listens + 1,
    last_listened = :lastListened
  WHERE track_id = :trackId;

  INSERT OR IGNORE INTO spotify_history
  VALUES (
    :trackId,
    :artistName,
    :albumName,
    :trackName,
    :trackLength,
    :numberOfListens,
    :lastListened
  );
}

getAllSpotifyHistoryCount:
SELECT COUNT(*)
FROM spotify_history
WHERE
  (
  `artist_name` LIKE :query
  OR `album_name` LIKE :query
  OR `track_name` LIKE :query
 );

getAllSpotifyHistory:
SELECT sh.*
FROM spotify_history sh
WHERE
 (
  `artist_name` LIKE :query
  OR `album_name` LIKE :query
  OR `track_name` LIKE :query
 )
ORDER BY last_listened DESC
LIMIT :limit OFFSET :offset;
