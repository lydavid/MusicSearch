CREATE TABLE IF NOT EXISTS release_label (
  `release_id` TEXT NOT NULL,
  `label_id` TEXT NOT NULL,
  `catalog_number` TEXT NOT NULL,

  PRIMARY KEY(`release_id`, `label_id`, `catalog_number`)

--   FOREIGN KEY(`label_id`) REFERENCES `label`(`id`)
--   ON UPDATE CASCADE
--   ON DELETE CASCADE,
--
--   FOREIGN KEY(`release_id`) REFERENCES `release`(`id`)
--   ON UPDATE CASCADE
--   ON DELETE CASCADE
);

insert:
INSERT OR IGNORE INTO release_label
VALUES ?;

deleteLabelReleaseLinks:
DELETE FROM release_label WHERE label_id = :labelId;


-- labels by release

getLabelsByRelease:
SELECT l.id, l.name, l.disambiguation, l.type, l.label_code, rl.catalog_number
FROM label l
INNER JOIN release_label rl ON l.id = rl.label_id
WHERE rl.release_id = :releaseId
ORDER BY rl.catalog_number;


-- releases by label

getNumberOfReleasesByLabel:
SELECT IFNULL(
  (
    SELECT COUNT(*)
    FROM (
      SELECT DISTINCT r.*
      FROM release r
      INNER JOIN release_label rl ON r.id = rl.release_id
      INNER JOIN label l ON l.id = rl.label_id
      INNER JOIN artist_credit_entity acr ON acr.entity_id = r.id
      INNER JOIN artist_credit ac ON ac.id = acr.artist_credit_id
      WHERE l.id = :labelId
      AND (
        r.name LIKE :query
        OR r.disambiguation LIKE :query
        OR r.date LIKE :query
        OR r.country_code LIKE :query
        OR ac.name LIKE :query
      )
    )
  ),
  0
) AS count;

-- DISTINCT because junction table can have the same release/label with different catalog number
getReleasesByLabel:
SELECT
  DISTINCT r.*,
  ac.name AS artistCreditNames,
  mi.thumbnail_url,
  (
    SELECT COUNT(cc.area_id)
    FROM `release`
    INNER JOIN release_country rc ON rc.release_id = `release`.id
    INNER JOIN country_code cc ON cc.area_id = rc.country_id
    WHERE r.id = `release`.id
  ) AS releaseCountryCount
FROM `release` r
INNER JOIN release_label rl ON r.id = rl.release_id
INNER JOIN label l ON l.id = rl.label_id
INNER JOIN artist_credit_entity acr ON acr.entity_id = r.id
INNER JOIN artist_credit ac ON ac.id = acr.artist_credit_id
LEFT JOIN mbid_image mi ON mi.mbid = r.id
WHERE l.id = :labelId
AND (
  r.name LIKE :query
  OR r.disambiguation LIKE :query
  OR r.date LIKE :query
  OR r.country_code LIKE :query
  OR ac.name LIKE :query
)
ORDER BY r.date, r.name
LIMIT :limit OFFSET :offset;

deleteReleasesByLabel:
DELETE FROM release WHERE id IN (
  SELECT r.id
  FROM release r
  INNER JOIN release_label rl ON r.id = rl.release_id
  INNER JOIN label l ON l.id = rl.label_id
  WHERE l.id = :labelId
);
