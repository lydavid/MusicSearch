CREATE TABLE IF NOT EXISTS works_by_entity (
  entity_id TEXT NOT NULL,
  work_id TEXT NOT NULL,

  PRIMARY KEY (entity_id, work_id)
);

insertOrFailWorkByEntity:
INSERT OR FAIL INTO works_by_entity
VALUES ?;

deleteWorksByEntity {
DELETE FROM work WHERE id IN (
  SELECT w.id
  FROM works_by_entity we
  INNER JOIN work w ON w.id = we.work_id
  WHERE we.entity_id = :entityId
);

DELETE FROM works_by_entity WHERE entity_id = :entityId;
}

getNumberOfWorksByEntity:
SELECT IFNULL(
  (
    SELECT COUNT(*)
    FROM works_by_entity we
    INNER JOIN work w ON w.id = we.work_id
    WHERE we.entity_id = :entityId
    AND (
      w.name LIKE :query
      OR w.disambiguation LIKE :query
      OR w.type LIKE :query
      OR w.language LIKE :query
      OR w.iswcs LIKE :query
    )
  ),
  0
) AS count;

getWorksByEntity:
SELECT
  w.id,
  w.name,
  w.disambiguation,
  w.type,
  w.language,
  w.iswcs,
  visited.entity_id IS NOT NULL AS visited
FROM works_by_entity we
INNER JOIN work w ON w.id = we.work_id
LEFT JOIN visited ON visited.entity_id = w.id
WHERE we.entity_id = :entityId
AND (
  w.name LIKE :query
  OR w.disambiguation LIKE :query
  OR w.type LIKE :query
  OR w.language LIKE :query
  OR w.iswcs LIKE :query
)
LIMIT :limit OFFSET :offset;
