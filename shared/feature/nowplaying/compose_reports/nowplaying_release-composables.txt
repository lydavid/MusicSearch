restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.nowplaying.PreviewNowPlayingHistoryCard()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.nowplaying.PreviewNowPlayingHistoryUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.nowplaying.NowPlayingHistoryCard(
  nowPlayingHistory: NowPlayingHistoryListItemModel
  stable modifier: Modifier? = @static <expression>
  stable onClick: @[ExtensionFunctionType] Function1<NowPlayingHistoryListItemModel, Unit>? = @static <expression>
)
open fun ly.david.musicsearch.shared.feature.nowplaying.NowPlayingHistoryPresenter.present(
  stable <this>: NowPlayingHistoryPresenter
): NowPlayingHistoryUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.nowplaying.NowPlayingHistoryUi(
  stable state: NowPlayingHistoryUiState
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.nowplaying.NowPlayingHistoryUi(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable modifier: Modifier? = @static <expression>
  stable lazyListState: LazyListState? = @dynamic <expression>
  stable topAppBarFilterState: TopAppBarFilterState? = @dynamic <expression>
  stable onBack: Function0<Unit>? = @static <expression>
  stable searchMusicBrainz: Function2<@[ParameterName(name = 'query')] String, @[ParameterName(name = 'entity')] MusicBrainzEntityType, Unit>? = @static <expression>
  stable onDelete: Function1<String, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.nowplaying.NowPlayingHistoryContent(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable modifier: Modifier? = @static <expression>
  stable lazyListState: LazyListState? = @dynamic <expression>
  stable searchMusicBrainz: Function2<@[ParameterName(name = 'query')] String, @[ParameterName(name = 'entity')] MusicBrainzEntityType, Unit>? = @static <expression>
  stable onDelete: Function1<String, Unit>? = @static <expression>
)
