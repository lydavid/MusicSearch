restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.PreviewSearchUiSearchResults()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.PreviewSearchUiSearchHistory()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.PreviewRecentSearchesHeader()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.PreviewSearchHistoryListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.RecentSearchesHeader(
  stable onDeleteAllHistory: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.SearchHistoryListItem(
  searchHistory: SearchHistoryListItemModel
  stable modifier: Modifier? = @static <expression>
  stable onItemClick: Function2<@[ParameterName(name = 'entityType')] MusicBrainzEntityType, @[ParameterName(name = 'query')] String, Unit>? = @static <expression>
  stable onDeleteItem: Function1<SearchHistoryListItemModel, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.SearchHistoryUi(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable lazyListState: LazyListState? = @dynamic <expression>
  stable onItemClick: Function2<@[ParameterName(name = 'entityType')] MusicBrainzEntityType, @[ParameterName(name = 'query')] String, Unit>? = @static <expression>
  stable onDeleteItem: Function1<SearchHistoryListItemModel, Unit>? = @static <expression>
  stable onDeleteAllHistory: Function0<Unit>? = @static <expression>
)
open fun ly.david.musicsearch.shared.feature.search.SearchPresenter.present(
  stable <this>: SearchPresenter
): SearchUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.SearchResultsUi(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable lazyListState: LazyListState? = @dynamic <expression>
  stable onItemClick: Function2<@[ParameterName(name = 'entity')] MusicBrainzEntityType, @[ParameterName(name = 'id')] String, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.ListItemUi(
  unstable listItemModel: ListItemModel?
  stable onItemClick: Function2<@[ParameterName(name = 'entity')] MusicBrainzEntityType, @[ParameterName(name = 'id')] String, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.SearchUi(
  stable state: SearchUiState
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.search.SearchUiContent(
  stable state: SearchUiState
  stable modifier: Modifier? = @static <expression>
  stable eventSink: Function1<SearchUiEvent, Unit>? = @static <expression>
)
