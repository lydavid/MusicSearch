stable class ly.david.musicsearch.shared.feature.search.SearchPresenter {
  stable val screen: SearchScreen
  stable val navigator: Navigator
  runtime val getSearchResults: GetSearchResults
  runtime val getSearchHistory: GetSearchHistory
  runtime val recordSearchHistory: RecordSearchHistory
  runtime val deleteSearchHistory: DeleteSearchHistory
  <runtime stability> = Stable
}
stable class ly.david.musicsearch.shared.feature.search.SearchUiState {
  stable val query: String
  stable val entity: MusicBrainzEntityType
  runtime val searchResults: LazyPagingItems<ListItemModel>
  stable val searchResultsListState: LazyListState
  runtime val searchHistory: LazyPagingItems<ListItemModel>
  stable val searchHistoryListState: LazyListState
  stable val eventSink: Function1<SearchUiEvent, Unit>
}
stable class ly.david.musicsearch.shared.feature.search.SearchUiEvent.UpdateEntity {
  stable val entity: MusicBrainzEntityType
  <runtime stability> = Stable
}
stable class ly.david.musicsearch.shared.feature.search.SearchUiEvent.UpdateQuery {
  stable val query: String
  <runtime stability> = Stable
}
stable class ly.david.musicsearch.shared.feature.search.SearchUiEvent.RecordSearch {
  <runtime stability> = Stable
}
stable class ly.david.musicsearch.shared.feature.search.SearchUiEvent.DeleteSearchHistory {
  runtime val item: SearchHistoryListItemModel
  <runtime stability> = Stable
}
stable class ly.david.musicsearch.shared.feature.search.SearchUiEvent.DeleteAllEntitySearchHistory {
  <runtime stability> = Stable
}
stable class ly.david.musicsearch.shared.feature.search.SearchUiEvent.ClickItem {
  stable val entity: MusicBrainzEntityType
  stable val id: String
  <runtime stability> = Stable
}
