restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AreaDetailsUi(
  area: AreaDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(734831335)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.area.AreaDetailsUi
)
fun present(
  stable <this>: AreaPresenter
): AreaUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AreaUi(
  stable state: AreaUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AreaUi(
  stable state: AreaUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
  unstable scope: CoroutineScope? = @dynamic rememberCoroutineScope(null, $composer, 0, 0b0001)
  stable onAddToCollectionClick: Function0<Unit>? = @static $composer.startReplaceableGroup(-896940749)
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.area.AreaUi
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ArtistDetailsUi(
  artist: ArtistDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable imageUrl: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(750606215)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.artist.ArtistDetailsUi
)
fun present(
  stable <this>: ArtistPresenter
): ArtistUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ArtistUi(
  stable state: ArtistUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EventDetailsUi(
  event: EventDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(1030981967)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.event.EventDetailsUi
)
fun present(
  stable <this>: EventPresenter
): EventUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EventUi(
  stable state: EventUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
fun present(
  stable <this>: GenrePresenter
): GenreUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun GenreUi(
  stable state: GenreUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable scheme("[androidx.compose.ui.UiComposable]") fun GenreUi(
  stable title: String
  stable entityId: String
  unstable genre: GenreMusicBrainzModel?
  stable modifier: Modifier? = @static Companion
  stable isError: Boolean = @static false
  stable onBack: Function0<Unit>? = @static $composer.startReplaceableGroup(-1500115331)
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.genre.GenreUi
  stable onRetryClick: Function0<Unit>? = @static $composer.startReplaceableGroup(-1500114211)
val tmp1_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceableGroup()
tmp1_group@ly.david.musicsearch.shared.feature.details.genre.GenreUi
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun InstrumentDetailsUi(
  instrument: InstrumentDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(-726909689)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.instrument.InstrumentDetailsUi
)
fun present(
  stable <this>: InstrumentPresenter
): InstrumentUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun InstrumentUi(
  stable state: InstrumentUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LabelDetailsUi(
  label: LabelDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(1381556635)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.label.LabelDetailsUi
)
fun present(
  stable <this>: LabelPresenter
): LabelUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LabelUi(
  stable state: LabelUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PlaceDetailsUi(
  place: PlaceDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(-2113645803)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.place.PlaceDetailsUi
)
fun present(
  stable <this>: PlacePresenter
): PlaceUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PlaceUi(
  stable state: PlaceUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RecordingDetailsUi(
  recording: RecordingDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(-348950463)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.recording.RecordingDetailsUi
)
fun present(
  stable <this>: RecordingPresenter
): RecordingUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RecordingUi(
  stable state: RecordingUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseDetailsUi(
  release: ReleaseDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable imageUrl: String? = @static ""
  stable onImageClick: Function0<Unit>? = @static $composer.startReplaceableGroup(-1454366487)
val tmp0_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.release.ReleaseDetailsUi
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(-1454363691)
val tmp1_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp1_group@ly.david.musicsearch.shared.feature.details.release.ReleaseDetailsUi
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
)
fun present(
  stable <this>: ReleasePresenter
): ReleaseUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseUi(
  stable state: ReleaseUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TracksByReleaseScreen(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable modifier: Modifier? = @static Companion
  stable snackbarHostState: SnackbarHostState? = @dynamic SnackbarHostState()
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onRecordingClick: Function2<@[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String, Unit>? = @static $composer.startReplaceableGroup(-1389865913)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   String  ,   <unused var>  :   String   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.release.TracksByReleaseScreen
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseGroupDetailsUi(
  releaseGroup: ReleaseGroupDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable imageUrl: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(1430421671)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.releasegroup.ReleaseGroupDetailsUi
)
fun present(
  stable <this>: ReleaseGroupPresenter
): ReleaseGroupUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseGroupUi(
  stable state: ReleaseGroupUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SeriesDetailsUi(
  series: SeriesDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(196832231)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.series.SeriesDetailsUi
)
fun present(
  stable <this>: SeriesPresenter
): SeriesUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SeriesUi(
  stable state: SeriesUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun WorkDetailsUi(
  work: WorkDetailsModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(1234871911)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.details.work.WorkDetailsUi
)
fun present(
  stable <this>: WorkPresenter
): WorkUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun WorkUi(
  stable state: WorkUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaDetails()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaDetailsError()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaRelationships()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaArtists()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaEvents()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaLabels()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaReleases()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaPlaces()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaStats()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewArtistDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewEventDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewGenreUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewInstrumentDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLabelDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewPlaceDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewRecordingDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTracksInReleaseScreen()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseGroupDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSeriesDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewWorkDetailsUi()
