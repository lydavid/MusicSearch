restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AreaDetailsUi(
  area: AreaScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: AreaPresenter
): AreaUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AreaUi(
  stable state: AreaUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AreaUi(
  stable state: AreaUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
  unstable scope: CoroutineScope? = @dynamic rememberCoroutineScope(null, $composer, 0, 0b0001)
  stable onAddToCollectionClick: Function0<Unit>? = @static {

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ArtistDetailsUi(
  artist: ArtistScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable imageUrl: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: ArtistPresenter
): ArtistUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ArtistUi(
  stable state: ArtistUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EventDetailsUi(
  event: EventScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: EventPresenter
): EventUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EventUi(
  stable state: EventUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
fun present(
  stable <this>: GenrePresenter
): GenreUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun GenreUi(
  stable state: GenreUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable scheme("[androidx.compose.ui.UiComposable]") fun GenreUi(
  stable title: String
  stable entityId: String
  unstable genre: GenreMusicBrainzModel?
  stable modifier: Modifier? = @static Companion
  stable isError: Boolean = @static false
  stable onBack: Function0<Unit>? = @static {

}

  stable onRetryClick: Function0<Unit>? = @static {

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun InstrumentDetailsUi(
  instrument: InstrumentScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: InstrumentPresenter
): InstrumentUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun InstrumentUi(
  stable state: InstrumentUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LabelDetailsUi(
  label: LabelScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: LabelPresenter
): LabelUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LabelUi(
  stable state: LabelUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PlaceDetailsUi(
  place: PlaceScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: PlacePresenter
): PlaceUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PlaceUi(
  stable state: PlaceUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RecordingDetailsUi(
  recording: RecordingScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: RecordingPresenter
): RecordingUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RecordingUi(
  stable state: RecordingUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseDetailsUi(
  release: ReleaseScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable imageUrl: String? = @static ""
  stable onImageClick: Function0<Unit>? = @static {

}

  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
)
fun present(
  stable <this>: ReleasePresenter
): ReleaseUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseUi(
  stable state: ReleaseUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TracksByReleaseScreen(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable modifier: Modifier? = @static Companion
  stable snackbarHostState: SnackbarHostState? = @dynamic SnackbarHostState()
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onRecordingClick: Function2<@[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String, Unit>? = @static { <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String ->

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseGroupDetailsUi(
  releaseGroup: ReleaseGroupScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable imageUrl: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: ReleaseGroupPresenter
): ReleaseGroupUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseGroupUi(
  stable state: ReleaseGroupUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SeriesDetailsUi(
  series: SeriesScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: SeriesPresenter
): SeriesUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SeriesUi(
  stable state: SeriesUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun WorkDetailsUi(
  work: WorkScaffoldModel
  stable modifier: Modifier? = @static Companion
  stable filterText: String? = @static ""
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: @[ParameterName(name = 'entity')] MusicBrainzEntity, <unused var>: @[ParameterName(name = 'id')] String, <unused var>: @[ParameterName(name = 'title')] String? ->

}

)
fun present(
  stable <this>: WorkPresenter
): WorkUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun WorkUi(
  stable state: WorkUiState
  stable entityId: String
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaDetails()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaDetailsError()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaRelationships()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaArtists()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaEvents()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaLabels()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaReleases()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaPlaces()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewAreaStats()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewArtistDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewEventDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewGenreUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewInstrumentDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLabelDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewPlaceDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewRecordingDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewTracksInReleaseScreen()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewReleaseGroupDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSeriesDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewWorkDetailsUi()
