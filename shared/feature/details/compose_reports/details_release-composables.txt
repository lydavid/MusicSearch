restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.alias.PreviewAliasListItemPrimaryLightDark()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.alias.PreviewAliasListItemEndedLightDark()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.alias.PreviewAliasesSectionLightDark()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaDetails()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaDetailsCollapsed()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaDetailsError()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaRelationships()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaArtists()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaEvents()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaLabels()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaReleases()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaPlaces()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.PreviewAreaStats()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.PreviewArtistDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.PreviewArtistDetailsUiCollapsed()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.PreviewArtistDetailsUiWithFilter()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.PreviewArtistDetailsUiWithListens()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.PreviewArtistDetailsUiLoading()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.PreviewArtistDetailsUiError()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.PreviewArtistDetailsUiWithWikipediaUrlButNoExtract()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.event.PreviewEventDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.genre.PreviewGenreUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.instrument.PreviewInstrumentDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.label.PreviewLabelDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.place.PreviewPlaceDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.PreviewRecordingUiDetails()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.PreviewRecordingUiDetailsVideo()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.PreviewRecordingUiDetailsWithListens()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.PreviewRecordingUiDetailsWithZeroListens()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.PreviewRecordingUiReleases()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.PreviewRecordingUiRelationships()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.PreviewReleaseDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.PreviewReleaseDetailsUiCollapsed()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.PreviewReleaseDetailsUiWithListens()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.PreviewTracksInReleaseScreen()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.releasegroup.PreviewReleaseGroupDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.releasegroup.PreviewReleaseGroupDetailsUiCollapsed()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.series.PreviewSeriesDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.utils.PreviewUrlsSection()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.work.PreviewWorkDetailsUi()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.alias.AliasListItem(
  alias: BasicAlias
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.alias.PreviewAliasListItemPrimary()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.alias.PreviewAliasListItemEnded()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.alias.PreviewAliasesSection()
restartable skippable fun ly.david.musicsearch.shared.feature.details.area.AreaDetailsTabUi(
  area: AreaDetailsModel
  detailsTabUiState: DetailsTabUiState
  stable modifier: Modifier? = @static <expression>
  stable filterText: String? = @static ""
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.area.AreaUi(
  stable state: DetailsUiState<AreaDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable]]") fun ly.david.musicsearch.shared.feature.details.area.AreaUiInternal(
  stable state: DetailsUiState<AreaDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
  stable snackbarHostState: SnackbarHostState? = @static <expression>
  unstable scope: CoroutineScope? = @dynamic <expression>
  unstable strings: AppStrings? = @dynamic <expression>
  unused stable now: Instant? = @dynamic <expression>
  stable additionalActions: Function2<Composer, Int, Unit>? = @static <expression>
  stable additionalOverflowDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static <expression>
  stable onEditCollectionClick: Function1<String, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.ArtistDetailsTabUi(
  artist: ArtistDetailsModel
  stable modifier: Modifier? = @static <expression>
  detailsTabUiState: DetailsTabUiState? = @dynamic <expression>
  stable filterText: String? = @static ""
  stable onImageClick: Function0<Unit>? = @static <expression>
  stable onItemClick: Function2<@[ParameterName(name = 'entity')] MusicBrainzEntityType, @[ParameterName(name = 'id')] String, Unit>? = @static <expression>
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.ArtistInformationSection(
  <this>: ArtistDetailsModel
  stable filterText: String? = @static ""
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.AreaSection(
  areaListItemModel: AreaListItemModel?
  stable filterText: String? = @static ""
  stable onItemClick: Function2<@[ParameterName(name = 'entity')] MusicBrainzEntityType, @[ParameterName(name = 'id')] String, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.artist.ArtistUi(
  stable state: DetailsUiState<ArtistDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable]]") fun ly.david.musicsearch.shared.feature.details.artist.ArtistUiInternal(
  stable state: DetailsUiState<ArtistDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
  stable snackbarHostState: SnackbarHostState? = @static <expression>
  unstable coroutineScope: CoroutineScope? = @dynamic <expression>
  unstable strings: AppStrings? = @dynamic <expression>
  stable additionalActions: Function2<Composer, Int, Unit>? = @static <expression>
  stable additionalOverflowDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static <expression>
  stable onEditCollectionClick: Function1<String, Unit>? = @static <expression>
)
restartable skippable fun ly.david.musicsearch.shared.feature.details.event.EventDetailsTabUi(
  event: EventDetailsModel
  stable modifier: Modifier? = @static <expression>
  detailsTabUiState: DetailsTabUiState? = @dynamic <expression>
  stable filterText: String? = @static ""
  stable onImageClick: Function0<Unit>? = @static <expression>
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.event.EventUi(
  stable state: DetailsUiState<EventDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
open fun ly.david.musicsearch.shared.feature.details.genre.GenrePresenter.present(
  stable <this>: GenrePresenter
): GenreUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.genre.GenreUi(
  stable state: GenreUiState
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.instrument.InstrumentDetailsTabUi(
  instrument: InstrumentDetailsModel
  stable modifier: Modifier? = @static <expression>
  detailsTabUiState: DetailsTabUiState? = @dynamic <expression>
  stable filterText: String? = @static ""
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.instrument.InstrumentUi(
  stable state: DetailsUiState<InstrumentDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.label.LabelDetailsTabUi(
  label: LabelDetailsModel
  stable modifier: Modifier? = @static <expression>
  detailsTabUiState: DetailsTabUiState? = @dynamic <expression>
  stable filterText: String? = @static ""
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.label.LabelUi(
  stable state: DetailsUiState<LabelDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.place.PlaceDetailsTabUi(
  place: PlaceDetailsModel
  stable modifier: Modifier? = @static <expression>
  detailsTabUiState: DetailsTabUiState? = @dynamic <expression>
  stable filterText: String? = @static ""
  stable onItemClick: Function2<@[ParameterName(name = 'entity')] MusicBrainzEntityType, @[ParameterName(name = 'id')] String, Unit>? = @static <expression>
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.place.PlaceUi(
  stable state: DetailsUiState<PlaceDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.RecordingDetailsTabUi(
  recording: RecordingDetailsModel
  stable modifier: Modifier? = @static <expression>
  detailsTabUiState: DetailsTabUiState? = @dynamic <expression>
  stable filterText: String? = @static ""
  stable onSeeAllListensClick: Function0<Unit>? = @static <expression>
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.LastListenedListItem(
  stable lastListenedMs: Long
  stable now: Instant
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.recording.RecordingUi(
  stable state: DetailsUiState<RecordingDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable]]") fun ly.david.musicsearch.shared.feature.details.recording.RecordingUiInternal(
  stable state: DetailsUiState<RecordingDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
  stable snackbarHostState: SnackbarHostState? = @static <expression>
  unstable coroutineScope: CoroutineScope? = @dynamic <expression>
  unstable strings: AppStrings? = @dynamic <expression>
  stable additionalActions: Function2<Composer, Int, Unit>? = @static <expression>
  stable additionalOverflowDropdownMenuItems: @[ExtensionFunctionType] Function3<OverflowMenuScope, Composer, Int, Unit>? = @static <expression>
  stable onEditCollectionClick: Function1<String, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.ReleaseDetailsTabUi(
  release: ReleaseDetailsModel
  detailsTabUiState: DetailsTabUiState
  stable modifier: Modifier? = @static <expression>
  stable filterText: String? = @static ""
  stable onImageClick: Function0<Unit>? = @static <expression>
  stable onCollapseExpandReleaseEvents: Function0<Unit>? = @static <expression>
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
  stable onItemClick: Function2<@[ParameterName(name = 'entity')] MusicBrainzEntityType, @[ParameterName(name = 'id')] String, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.LastListenedListItem(
  listenWithTrack: ListenWithTrack
  stable now: Instant
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.ReleaseUi(
  stable state: DetailsUiState<ReleaseDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.TracksByReleaseUi(
  stable uiState: TracksByReleaseUiState
  stable modifier: Modifier? = @static <expression>
  stable onRecordingClick: Function1<@[ParameterName(name = 'id')] String, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.release.TracksByReleaseUi(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable modifier: Modifier? = @static <expression>
  stable lazyListState: LazyListState? = @dynamic <expression>
  unstable collapsedMediumIds: Set<Long>? = @static <expression>
  stable onRecordingClick: Function1<@[ParameterName(name = 'id')] String, Unit>? = @static <expression>
  stable onToggleMedium: Function1<@[ParameterName(name = 'id')] String, Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.releasegroup.ReleaseGroupDetailsTabUi(
  releaseGroup: ReleaseGroupDetailsModel
  detailsTabUiState: DetailsTabUiState
  stable modifier: Modifier? = @static <expression>
  stable filterText: String? = @static ""
  stable onImageClick: Function0<Unit>? = @static <expression>
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.releasegroup.ReleaseGroupUi(
  stable state: DetailsUiState<ReleaseGroupDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.series.SeriesDetailsTabUi(
  series: SeriesDetailsModel
  stable modifier: Modifier? = @static <expression>
  detailsTabUiState: DetailsTabUiState? = @dynamic <expression>
  stable filterText: String? = @static ""
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.series.SeriesUi(
  stable state: DetailsUiState<SeriesDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun ly.david.musicsearch.shared.feature.details.utils.DetailsHorizontalPager(
  stable pagerState: PagerState
  stable state: DetailsUiState<T>
  browseMethod: ByEntity
  entitiesLazyPagingItems: EntitiesLazyPagingItems
  stable innerPadding: PaddingValues
  stable scrollBehavior: TopAppBarScrollBehavior
  stable onEditCollectionClick: Function1<String, Unit>? = @static <expression>
  stable requestForMissingCoverArtUrl: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'entity')] MusicBrainzEntityType?, Unit>? = @static <expression>
  stable detailsScreen: Function3<T, Composer, Int, Unit>
)
scheme("[presenter]") fun ly.david.musicsearch.shared.feature.details.utils.DetailsPresenter.present(
  stable <this>: DetailsPresenter<DetailsModel>
): DetailsUiState<DetailsModel>
restartable skippable fun ly.david.musicsearch.shared.feature.details.utils.DetailsTabUi(
  detailsModel: T
  detailsTabUiState: DetailsTabUiState
  stable modifier: Modifier? = @static <expression>
  stable filterText: String? = @static ""
  stable entityInfoSection: @[ExtensionFunctionType] Function3<T, Composer, Int, Unit>? = @static <expression>
  stable additionalDetailsSection: @[ExtensionFunctionType] Function3<T, Composer, Int, Unit>? = @static null
  stable bringYourOwnLabelsSection: @[ExtensionFunctionType] Function1<LazyListScope, Unit>? = @static <expression>
  stable onImageClick: Function0<Unit>? = @static <expression>
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.work.WorkDetailsTabUi(
  work: WorkDetailsModel
  stable modifier: Modifier? = @static <expression>
  detailsTabUiState: DetailsTabUiState? = @dynamic <expression>
  stable filterText: String? = @static ""
  stable onCollapseExpandExternalLinks: Function0<Unit>? = @static <expression>
  stable onCollapseExpandAliases: Function0<Unit>? = @static <expression>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ly.david.musicsearch.shared.feature.details.work.WorkUi(
  stable state: DetailsUiState<WorkDetailsModel>
  stable entityId: String
  stable modifier: Modifier? = @static <expression>
)
