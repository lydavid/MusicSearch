restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun HistoryListItem(
  lookupHistory: LookupHistoryListItemModel
  stable modifier: Modifier? = @static Companion
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(1830518273)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.history.internal.HistoryListItem
  stable onDeleteItem: Function1<LookupHistoryListItemModel, Unit>? = @static $composer.startReplaceableGroup(1830520597)
val tmp1_group = $composer.cache(false) {
  {     it  :   LookupHistoryListItemModel   ->

  }

}

$composer.endReplaceableGroup()
tmp1_group@ly.david.musicsearch.shared.feature.history.internal.HistoryListItem
)
fun present(
  stable <this>: HistoryPresenter
): HistoryUiState
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun HistorySortBottomSheet(
  stable sortOption: HistorySortOption
  stable onSortOptionClick: Function1<HistorySortOption, Unit>? = @static $composer.startReplaceableGroup(1086965174)
val tmp0_group = $composer.cache(false) {
  {     it  :   HistorySortOption   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.history.internal.HistorySortBottomSheet
  stable bottomSheetState: SheetState? = @dynamic rememberModalBottomSheetState(false, null, $composer, 0, 0b0011)
  stable onDismiss: Function0<Unit>? = @static $composer.startReplaceableGroup(1086968374)
val tmp1_group = $composer.cache(false) {
  {

  }

}

$composer.endReplaceableGroup()
tmp1_group@ly.david.musicsearch.shared.feature.history.internal.HistorySortBottomSheet
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun HistorySortBottomSheetContent(
  stable sortOption: HistorySortOption? = @static HistorySortOption.RECENTLY_VISITED
  stable onSortOptionClick: Function1<HistorySortOption, Unit>? = @static $composer.startReplaceableGroup(-419512985)
val tmp0_group = $composer.cache(false) {
  {     it  :   HistorySortOption   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.history.internal.HistorySortBottomSheetContent
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun HistoryUi(
  stable state: HistoryUiState
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun HistoryUi(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable modifier: Modifier? = @static Companion
  stable lazyListState: LazyListState? = @dynamic LazyListState()
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static $composer.startReplaceableGroup(2112597124)
val tmp0_group = $composer.cache(false) {
  {     <unused var>  :   MusicBrainzEntity  ,   <unused var>  :   String  ,   <unused var>  :   String?   ->

  }

}

$composer.endReplaceableGroup()
tmp0_group@ly.david.musicsearch.shared.feature.history.internal.HistoryUi
  stable onDeleteItem: Function1<LookupHistoryListItemModel, Unit>? = @static $composer.startReplaceableGroup(2112599448)
val tmp1_group = $composer.cache(false) {
  {     it  :   LookupHistoryListItemModel   ->

  }

}

$composer.endReplaceableGroup()
tmp1_group@ly.david.musicsearch.shared.feature.history.internal.HistoryUi
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLookupHistoryReleaseGroup(
  stable imageUrl: String? = @static "https://www.example.com/image.jpg"
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLookupHistoryRelease(
  stable imageUrl: String? = @static "https://www.example.com/image.jpg"
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewLookupHistoryArtist(
  stable imageUrl: String? = @static "https://www.example.com/image.jpg"
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewHistorySortBottomSheetContent()
