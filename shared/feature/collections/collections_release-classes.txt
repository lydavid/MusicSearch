stable class AddToCollectionPresenter {
  stable val screen: AddToCollectionScreen
  stable val navigator: Navigator
  runtime val getAllCollections: GetAllCollections
  runtime val createCollection: CreateCollection
  unstable val collectionRepository: CollectionRepository
  <runtime stability> = Stable
}
stable class AddToCollectionUiState {
  stable val defaultEntity: MusicBrainzEntity
  runtime val lazyPagingItems: LazyPagingItems<CollectionListItemModel>
  stable val eventSink: Function1<AddToCollectionUiEvent, Unit>
}
stable class CreateNewCollection {
  runtime val newCollection: NewCollection
  <runtime stability> = Stable
}
stable class AddToCollection {
  stable val id: String
  <runtime stability> = Stable
}
stable class CollectionListPresenter {
  stable val screen: CollectionListScreen
  stable val navigator: Navigator
  unstable val appPreferences: AppPreferences
  runtime val getAllCollections: GetAllCollections
  runtime val createCollection: CreateCollection
  runtime val deleteCollection: DeleteCollection
  <runtime stability> = Stable
}
stable class CollectionListUiState {
  stable val topAppBarFilterState: TopAppBarFilterState
  stable val topAppBarEditState: TopAppBarEditState
  stable val showLocal: Boolean
  stable val showRemote: Boolean
  stable val sortOption: CollectionSortOption
  runtime val lazyPagingItems: LazyPagingItems<CollectionListItemModel>
  stable val lazyListState: LazyListState
  runtime val actionableResult: ActionableResult?
  stable val eventSink: Function1<CollectionListUiEvent, Unit>
}
stable class UpdateShowLocal {
  stable val show: Boolean
  <runtime stability> = Stable
}
stable class UpdateShowRemote {
  stable val show: Boolean
  <runtime stability> = Stable
}
stable class UpdateSortOption {
  stable val sortOption: CollectionSortOption
  <runtime stability> = Stable
}
stable class CreateNewCollection {
  runtime val newCollection: NewCollection
  <runtime stability> = Stable
}
stable class GoToCollection {
  stable val id: String
  <runtime stability> = Stable
}
stable class DeleteCollection {
  stable val id: String
  stable val name: String
  <runtime stability> = Stable
}
stable class CollectionPresenter {
  stable val screen: CollectionScreen
  stable val navigator: Navigator
  runtime val getCollection: GetCollection
  unstable val incrementLookupHistory: IncrementLookupHistory
  stable val areasListPresenter: AreasListPresenter
  stable val artistsListPresenter: ArtistsListPresenter
  stable val eventsListPresenter: EventsListPresenter
  stable val genresListPresenter: GenresListPresenter
  stable val instrumentsListPresenter: InstrumentsListPresenter
  stable val labelsListPresenter: LabelsListPresenter
  stable val placesListPresenter: PlacesListPresenter
  stable val recordingsListPresenter: RecordingsListPresenter
  stable val releasesListPresenter: ReleasesListPresenter
  stable val releaseGroupsListPresenter: ReleaseGroupsListPresenter
  stable val seriesListPresenter: SeriesListPresenter
  stable val worksListPresenter: WorksListPresenter
  runtime val deleteFromCollection: DeleteFromCollection
  unstable val getMusicBrainzUrl: GetMusicBrainzUrl
  unstable val collectionRepository: CollectionRepository
  <runtime stability> = Stable
}
stable class CollectionUiState {
  stable val title: String
  runtime val collection: CollectionListItemModel?
  runtime val actionableResult: ActionableResult?
  stable val topAppBarFilterState: TopAppBarFilterState
  stable val url: String
  stable val topAppBarEditState: TopAppBarEditState
  stable val areasListUiState: AreasListUiState
  stable val artistsListUiState: ArtistsListUiState
  stable val eventsListUiState: EventsListUiState
  stable val genresListUiState: GenresListUiState
  stable val instrumentsListUiState: InstrumentsListUiState
  stable val labelsListUiState: LabelsListUiState
  stable val placesListUiState: PlacesListUiState
  stable val recordingsListUiState: RecordingsListUiState
  stable val releasesListUiState: ReleasesListUiState
  stable val releaseGroupsListUiState: ReleaseGroupsListUiState
  stable val seriesListUiState: SeriesListUiState
  stable val worksListUiState: WorksListUiState
  stable val eventSink: Function1<CollectionUiEvent, Unit>
}
stable class NavigateUp {
  <runtime stability> = Stable
}
stable class MarkItemForDeletion {
  stable val collectableId: String
  stable val name: String
  <runtime stability> = Stable
}
stable class UnMarkItemForDeletion {
  stable val collectableId: String
  <runtime stability> = Stable
}
stable class DeleteItem {
  stable val collectableId: String
  stable val name: String
  <runtime stability> = Stable
}
stable class ClickItem {
  stable val entity: MusicBrainzEntity
  stable val id: String
  stable val title: String?
  <runtime stability> = Stable
}
