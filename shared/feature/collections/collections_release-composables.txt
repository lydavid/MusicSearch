restartable scheme("[androidx.compose.ui.UiComposable]") fun CollectionBottomSheet(
  stable bottomSheetState: SheetState
  unstable scope: CoroutineScope
  collections: LazyPagingItems<CollectionListItemModel>
  stable modifier: Modifier? = @static Companion
  stable onDismiss: Function0<Unit>? = @static {

}

  stable onCreateCollectionClick: Function0<Unit>? = @static {

}

  unstable onAddToCollection: SuspendFunction1<@[ParameterName(name = 'collectionId')] String, Unit>? = @static { it: String ->

}

)
restartable scheme("[androidx.compose.ui.UiComposable]") fun CollectionListItem(
  unstable collection: CollectionListItemModel
  stable modifier: Modifier? = @static Companion
  stable onClick: @[ExtensionFunctionType] Function1<CollectionListItemModel, Unit>? = @static {

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CollectionListScaffold(
  stable modifier: Modifier? = @static Companion
  stable onCollectionClick: Function2<@[ParameterName(name = 'id')] String, @[ParameterName(name = 'isRemote')] Boolean, Unit>? = @static { <unused var>: String, <unused var>: Boolean ->

}

  stable onCreateCollectionClick: Function0<Unit>? = @static {

}

  unstable viewModel: CollectionListViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CollectionsFilterChipsBar(
  stable modifier: Modifier? = @static Companion
  stable showLocal: Boolean = @static true
  stable onShowLocalToggle: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

  stable showRemote: Boolean = @static true
  stable onShowRemoteToggle: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CollectionScaffold(
  stable collectionId: String
  stable modifier: Modifier? = @static Companion
  stable onBack: Function0<Unit>? = @static {

}

  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String? ->

}

  stable showMoreInfoInReleaseListItem: Boolean = @static true
  stable onShowMoreInfoInReleaseListItemChange: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

  stable sortReleaseGroupListItems: Boolean = @static false
  stable onSortReleaseGroupListItemsChange: Function1<Boolean, Unit>? = @static { it: Boolean ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'collectableId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  unstable viewModel: CollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CollectionScaffoldContent(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable entity: MusicBrainzEntity?
  stable snackbarHostState: SnackbarHostState
  stable innerPadding: PaddingValues
  stable scrollBehavior: TopAppBarScrollBehavior
  stable showMoreInfoInReleaseListItem: Boolean = @static true
  stable sortReleaseGroupListItems: Boolean = @static false
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String? ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'collectableId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun CreateCollectionDialog(
  stable modifier: Modifier? = @static Companion
  stable onDismiss: Function0<Unit>? = @static {

}

  stable onSubmit: Function2<@[ParameterName(name = 'name')] String, @[ParameterName(name = 'entity')] MusicBrainzEntity, Unit>? = @static { <unused var>: String, <unused var>: MusicBrainzEntity ->

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun Preview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun AreasByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onAreaClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: AreasByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ArtistsByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onArtistClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: ArtistsByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun EventsByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onEventClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: EventsByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun InstrumentsByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onInstrumentClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: InstrumentsByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LabelsByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onLabelClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: LabelsByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PlacesByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onPlaceClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: PlacesByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RecordingsByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onRecordingClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: RecordingsByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleaseGroupsByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable isSorted: Boolean
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onReleaseGroupClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: ReleaseGroupsByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ReleasesByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable showMoreInfo: Boolean
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onReleaseClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: ReleasesByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SeriesByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onSeriesClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: SeriesByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun WorksByCollectionScreen(
  stable collectionId: String
  stable isRemote: Boolean
  stable filterText: String
  stable snackbarHostState: SnackbarHostState
  stable modifier: Modifier? = @static Companion
  stable onWorkClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, String, String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String ->

}

  stable onDeleteFromCollection: Function2<@[ParameterName(name = 'entityId')] String, @[ParameterName(name = 'name')] String, Unit>? = @static { <unused var>: String, <unused var>: String ->

}

  stable viewModel: WorksByCollectionViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
