stable class AppInfo {
  stable val applicationId: String
  <runtime stability> = Stable
}
stable class LifeSpanUiModel {
  stable val begin: String?
  stable val end: String?
  stable val ended: Boolean?
  <runtime stability> = Stable
}
stable class ListFilters {
  stable val query: String
  stable val isRemote: Boolean
  stable val sorted: Boolean
  <runtime stability> = Stable
}
stable class AreaType {
  stable val COUNTRY: String
  <runtime stability> = Stable
}
stable class ReleaseEvent {
  stable val id: String
  stable val name: String
  stable val date: String?
  stable val countryCode: String?
  stable val visited: Boolean
  <runtime stability> = Stable
}
unstable class AreaDetailsModel {
  stable val id: String
  stable val name: String
  stable val sortName: String
  stable val disambiguation: String?
  stable val type: String?
  stable val lifeSpan: LifeSpanUiModel
  unstable val countryCodes: List<String>
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
runtime class GetAreasByEntity {
  runtime val areasByEntityRepository: AreasByEntityRepository
  <runtime stability> = Uncertain(AreasByEntityRepository)
}
stable class ArtistCreditUiModel {
  stable val artistId: String
  stable val name: String
  stable val joinPhrase: String?
  <runtime stability> = Stable
}
unstable class ArtistDetailsModel {
  stable val id: String
  stable val name: String
  stable val sortName: String
  stable val disambiguation: String?
  stable val type: String?
  stable val gender: String?
  unstable val ipis: List<String>?
  unstable val isnis: List<String>?
  stable val lifeSpan: LifeSpanUiModel
  unstable val urls: List<RelationListItemModel>
  stable val imageUrl: String?
  stable val wikipediaExtract: WikipediaExtract
  unstable val areaListItemModel: AreaListItemModel?
  <runtime stability> = Unstable
}
stable class CollaboratingArtistAndRecording {
  stable val artistId: String
  stable val artistName: String
  stable val recordingId: String
  stable val recordingName: String
  <runtime stability> = Stable
}
runtime class GetArtistsByEntity {
  runtime val artistsByEntityRepository: ArtistsByEntityRepository
  <runtime stability> = Uncertain(ArtistsByEntityRepository)
}
stable class BrowseEntityCount {
  stable val browseEntity: MusicBrainzEntity
  stable val localCount: Int
  stable val remoteCount: Int?
  <runtime stability> = Stable
}
runtime class ObserveBrowseEntityCount {
  runtime val browseEntityCountRepository: BrowseEntityCountRepository
  <runtime stability> = Uncertain(BrowseEntityCountRepository)
}
runtime class CreateCollection {
  runtime val collectionRepository: CollectionRepository
  <runtime stability> = Uncertain(CollectionRepository)
}
runtime class DeleteFromCollection {
  runtime val collectionRepository: CollectionRepository
  <runtime stability> = Uncertain(CollectionRepository)
}
stable class GetAllCollections {
  runtime val collectionRepository: CollectionRepository
  runtime val musicBrainzAuthStore: MusicBrainzAuthStore
  <runtime stability> = 
}
stable class GetCollection {
  runtime val collectionRepository: CollectionRepository
  runtime val visitedDao: VisitedDao
  <runtime stability> = 
}
stable class ActionableResult {
  stable val message: String
  stable val errorResolution: ErrorResolution
  stable val actionLabel: String?
  <runtime stability> = Stable
}
stable class HandledException {
  stable val userMessage: String
  stable val errorResolution: ErrorResolution
  <runtime stability> = Stable
}
unstable class EventDetailsModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  stable val time: String?
  stable val cancelled: Boolean?
  stable val lifeSpan: LifeSpanUiModel
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
runtime class GetEventsByEntity {
  runtime val eventsByEntityRepository: EventsByEntityRepository
  <runtime stability> = Uncertain(EventsByEntityRepository)
}
unstable class LookupHistory {
  stable val mbid: String
  stable val title: String
  stable val entity: MusicBrainzEntity
  stable val numberOfVisits: Int
  unstable val lastAccessed: Instant
  stable val searchHint: String
  stable val deleted: Boolean
  <runtime stability> = Unstable
}
unstable class NowPlayingHistory {
  stable val raw: String
  unstable val lastPlayed: Instant
  <runtime stability> = Unstable
}
unstable class SearchHistory {
  stable val query: String
  stable val entity: MusicBrainzEntity
  unstable val lastAccessed: Instant
  <runtime stability> = Unstable
}
unstable class SpotifyHistory {
  stable val trackId: String
  stable val artistName: String?
  stable val albumName: String?
  stable val trackName: String?
  stable val trackLengthMilliseconds: Int?
  unstable val lastListened: Instant
  <runtime stability> = Unstable
}
runtime class DeleteLookupHistory {
  runtime val lookupHistoryRepository: LookupHistoryRepository
  <runtime stability> = Uncertain(LookupHistoryRepository)
}
runtime class GetPagedHistory {
  runtime val lookupHistoryRepository: LookupHistoryRepository
  <runtime stability> = Uncertain(LookupHistoryRepository)
}
runtime class IncrementLookupHistory {
  runtime val lookupHistoryRepository: LookupHistoryRepository
  <runtime stability> = Uncertain(LookupHistoryRepository)
}
runtime class MarkLookupHistoryForDeletion {
  runtime val lookupHistoryRepository: LookupHistoryRepository
  <runtime stability> = Uncertain(LookupHistoryRepository)
}
runtime class UnMarkLookupHistoryForDeletion {
  runtime val lookupHistoryRepository: LookupHistoryRepository
  <runtime stability> = Uncertain(LookupHistoryRepository)
}
stable class ImageUrls {
  stable val thumbnailUrl: String
  stable val largeUrl: String
  <runtime stability> = Stable
}
unstable class InstrumentDetailsModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val description: String?
  stable val type: String?
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
runtime class GetInstrumentsByEntity {
  runtime val instrumentsByEntityRepository: InstrumentsByEntityRepository
  <runtime stability> = Uncertain(InstrumentsByEntityRepository)
}
unstable class LabelDetailsModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  stable val labelCode: Int?
  unstable val ipis: List<String>?
  unstable val isnis: List<String>?
  stable val lifeSpan: LifeSpanUiModel
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
stable class LabelWithCatalog {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  stable val labelCode: Int?
  stable val catalogNumber: String
  <runtime stability> = Stable
}
runtime class GetLabelsByEntity {
  runtime val labelsByEntityRepository: LabelsByEntityRepository
  <runtime stability> = Uncertain(LabelsByEntityRepository)
}
unstable class AreaListItemModel {
  stable val id: String
  stable val name: String
  stable val sortName: String
  stable val disambiguation: String?
  stable val type: String?
  stable val lifeSpan: LifeSpanUiModel?
  unstable val countryCodes: List<String>?
  stable val date: String?
  stable val visited: Boolean
  <runtime stability> = Unstable
}
stable class ArtistListItemModel {
  stable val id: String
  stable val name: String
  stable val sortName: String
  stable val disambiguation: String?
  stable val type: String?
  stable val gender: String?
  stable val countryCode: String?
  stable val lifeSpan: LifeSpanUiModel
  stable val imageUrl: String?
  stable val visited: Boolean
  <runtime stability> = Stable
}
stable class CollectionListItemModel {
  stable val id: String
  stable val isRemote: Boolean
  stable val name: String
  stable val description: String
  stable val entity: MusicBrainzEntity
  stable val cachedEntityCount: Int
  stable val visited: Boolean
  <runtime stability> = Stable
}
stable class EventListItemModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  stable val time: String?
  stable val cancelled: Boolean?
  stable val lifeSpan: LifeSpanUiModel
  stable val visited: Boolean
  <runtime stability> = Stable
}
stable class GenreListItemModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  <runtime stability> = Stable
}
stable class InstrumentListItemModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val description: String?
  stable val type: String?
  stable val visited: Boolean
  <runtime stability> = Stable
}
stable class LabelListItemModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  stable val labelCode: Int?
  stable val catalogNumber: String?
  stable val visited: Boolean
  <runtime stability> = Stable
}
stable class ListItemModel {
  <runtime stability> = Stable
}
stable class Header {
  stable val id: String
  <runtime stability> = Stable
}
stable class EndOfList {
  stable val id: String
  <runtime stability> = Stable
}
stable class ListSeparator {
  stable val id: String
  stable val text: String
  <runtime stability> = Stable
}
unstable class LookupHistoryListItemModel {
  stable val id: String
  stable val title: String
  stable val entity: MusicBrainzEntity
  stable val numberOfVisits: Int
  unstable val lastAccessed: Instant
  stable val imageUrl: String?
  <runtime stability> = Unstable
}
unstable class NowPlayingHistoryListItemModel {
  stable val id: String
  stable val title: String
  stable val artist: String
  unstable val lastPlayed: Instant
  <runtime stability> = Unstable
}
runtime class PlaceListItemModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val address: String
  stable val type: String?
  runtime val coordinates: Coordinates?
  stable val lifeSpan: LifeSpanUiModel?
  stable val visited: Boolean
  <runtime stability> = Uncertain(Coordinates)
}
stable class RecordingListItemModel {
  stable val id: String
  stable val name: String
  stable val firstReleaseDate: String?
  stable val disambiguation: String
  stable val length: Int?
  stable val video: Boolean
  stable val formattedArtistCredits: String?
  <runtime stability> = Stable
}
stable class RelationListItemModel {
  stable val id: String
  stable val linkedEntityId: String
  stable val label: String
  stable val name: String
  stable val disambiguation: String?
  stable val attributes: String?
  stable val additionalInfo: String?
  stable val linkedEntity: MusicBrainzEntity
  <runtime stability> = Stable
}
unstable class ReleaseGroupListItemModel {
  stable val id: String
  stable val name: String
  stable val firstReleaseDate: String
  stable val disambiguation: String
  stable val primaryType: String?
  unstable val secondaryTypes: List<String>?
  stable val formattedArtistCredits: String?
  stable val imageUrl: String?
  <runtime stability> = Unstable
}
stable class ReleaseListItemModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String
  stable val date: String?
  stable val barcode: String?
  stable val status: String?
  stable val statusId: String?
  stable val countryCode: String?
  stable val packaging: String?
  stable val packagingId: String?
  stable val asin: String?
  stable val quality: String?
  stable val catalogNumbers: String?
  stable val coverArtArchive: CoverArtArchiveUiModel
  stable val textRepresentation: TextRepresentationUiModel?
  stable val imageUrl: String?
  stable val formattedFormats: String?
  stable val formattedTracks: String?
  stable val formattedArtistCredits: String?
  stable val releaseCountryCount: Int
  stable val visited: Boolean
  <runtime stability> = Stable
}
stable class SearchHistoryListItemModel {
  stable val id: String
  stable val query: String
  stable val entity: MusicBrainzEntity
  <runtime stability> = Stable
}
stable class SeriesListItemModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  <runtime stability> = Stable
}
unstable class SpotifyHistoryListItemModel {
  stable val id: String
  stable val trackId: String
  stable val artistName: String?
  stable val albumName: String?
  stable val trackName: String?
  stable val trackLengthMilliseconds: Int?
  unstable val lastListened: Instant
  <runtime stability> = Unstable
}
stable class TrackListItemModel {
  stable val id: String
  stable val position: Int
  stable val number: String
  stable val title: String
  stable val length: Int?
  stable val mediumId: Long
  stable val recordingId: String
  stable val formattedArtistCredits: String?
  <runtime stability> = Stable
}
unstable class WorkListItemModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  stable val language: String?
  unstable val iswcs: List<String>?
  unstable val attributes: List<WorkAttributeUiModel>
  <runtime stability> = Unstable
}
runtime class DeleteNowPlayingHistory {
  runtime val nowPlayingHistoryRepository: NowPlayingHistoryRepository
  <runtime stability> = Uncertain(NowPlayingHistoryRepository)
}
runtime class GetNowPlayingHistory {
  runtime val nowPlayingHistoryRepository: NowPlayingHistoryRepository
  <runtime stability> = Uncertain(NowPlayingHistoryRepository)
}
stable class CoordinatesUiModel {
  stable val longitude: Double?
  stable val latitude: Double?
  <runtime stability> = Stable
}
unstable class PlaceDetailsModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val address: String
  stable val type: String?
  stable val coordinates: CoordinatesUiModel
  stable val lifeSpan: LifeSpanUiModel
  unstable val area: AreaListItemModel?
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
runtime class GetPlacesByEntity {
  runtime val placesByEntityRepository: PlacesByEntityRepository
  <runtime stability> = Uncertain(PlacesByEntityRepository)
}
unstable class RecordingDetailsModel {
  stable val id: String
  stable val name: String
  stable val firstReleaseDate: String?
  stable val disambiguation: String
  stable val length: Int?
  stable val video: Boolean
  unstable val isrcs: List<String>?
  unstable val artistCredits: List<ArtistCreditUiModel>
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
runtime class GetRecordingsByEntity {
  runtime val recordingsByEntityRepository: RecordingsByEntityRepository
  <runtime stability> = Uncertain(RecordingsByEntityRepository)
}
stable class RelationTypeCount {
  stable val linkedEntity: MusicBrainzEntity
  stable val count: Int
  <runtime stability> = Stable
}
stable class RelationWithOrder {
  stable val id: String
  stable val linkedEntityId: String
  stable val label: String
  stable val name: String
  stable val disambiguation: String?
  stable val attributes: String?
  stable val additionalInfo: String?
  stable val linkedEntity: MusicBrainzEntity
  stable val order: Int
  <runtime stability> = Stable
}
runtime class GetCountOfEachRelationshipTypeUseCase {
  runtime val relationRepository: RelationRepository
  <runtime stability> = Uncertain(RelationRepository)
}
unstable class GetEntityRelationships {
  runtime val relationRepository: RelationRepository
  unstable val coroutineScope: CoroutineScope
  <runtime stability> = Unstable
}
stable class CoverArtArchiveUiModel {
  stable val count: Int
  <runtime stability> = Stable
}
stable class FormatTrackCount {
  stable val format: String?
  stable val trackCount: Int
  <runtime stability> = Stable
}
unstable class ReleaseDetailsModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String
  stable val date: String?
  stable val barcode: String?
  stable val status: String?
  stable val statusId: String?
  stable val countryCode: String?
  stable val packaging: String?
  stable val packagingId: String?
  stable val asin: String?
  stable val quality: String?
  stable val coverArtArchive: CoverArtArchiveUiModel
  stable val textRepresentation: TextRepresentationUiModel
  stable val imageUrl: String?
  stable val formattedFormats: String
  stable val formattedTracks: String
  unstable val artistCredits: List<ArtistCreditUiModel>
  unstable val releaseGroup: ReleaseGroupForRelease?
  unstable val areas: List<AreaListItemModel>
  unstable val labels: List<LabelListItemModel>
  unstable val urls: List<RelationListItemModel>
  stable val releaseLength: Int?
  stable val hasNullLength: Boolean
  <runtime stability> = Unstable
}
stable class TextRepresentationUiModel {
  stable val script: String?
  stable val language: String?
  <runtime stability> = Stable
}
runtime class GetReleasesByEntity {
  runtime val releasesByEntityRepository: ReleasesByEntityRepository
  <runtime stability> = Uncertain(ReleasesByEntityRepository)
}
runtime class GetTracksByRelease {
  runtime val releaseRepository: ReleaseRepository
  <runtime stability> = Uncertain(ReleaseRepository)
}
unstable class ReleaseGroupDetailsModel {
  stable val id: String
  stable val name: String
  stable val firstReleaseDate: String
  stable val disambiguation: String
  stable val primaryType: String?
  unstable val secondaryTypes: List<String>?
  stable val imageUrl: String?
  unstable val artistCredits: List<ArtistCreditUiModel>
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
unstable class ReleaseGroupForRelease {
  stable val id: String
  stable val name: String
  stable val firstReleaseDate: String
  stable val disambiguation: String
  stable val primaryType: String?
  unstable val secondaryTypes: List<String>?
  <runtime stability> = Unstable
}
unstable class ReleaseGroupTypeCount {
  stable val primaryType: String?
  unstable val secondaryTypes: List<String>?
  stable val count: Int
  <runtime stability> = Unstable
}
runtime class GetReleaseGroupsByEntity {
  runtime val releaseGroupsByEntityRepository: ReleaseGroupsByEntityRepository
  <runtime stability> = Uncertain(ReleaseGroupsByEntityRepository)
}
runtime class DeleteSearchHistory {
  runtime val searchHistoryRepository: SearchHistoryRepository
  <runtime stability> = Uncertain(SearchHistoryRepository)
}
runtime class GetSearchHistory {
  runtime val searchHistoryRepository: SearchHistoryRepository
  <runtime stability> = Uncertain(SearchHistoryRepository)
}
runtime class RecordSearchHistory {
  runtime val searchHistoryRepository: SearchHistoryRepository
  <runtime stability> = Uncertain(SearchHistoryRepository)
}
stable class SearchResultMetadata {
  stable val entity: MusicBrainzEntity
  stable val query: String
  stable val localCount: Int
  stable val remoteCount: Int
  <runtime stability> = Stable
}
runtime class GetSearchResults {
  runtime val searchResultsRepository: SearchResultsRepository
  <runtime stability> = Uncertain(SearchResultsRepository)
}
unstable class SeriesDetailsModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
runtime class GetSeriesByEntity {
  runtime val seriesByEntityRepository: SeriesByEntityRepository
  <runtime stability> = Uncertain(SeriesByEntityRepository)
}
stable class WikipediaExtract {
  stable val extract: String
  stable val wikipediaUrl: String
  <runtime stability> = Stable
}
stable class WorkAttributeUiModel {
  stable val type: String
  stable val typeId: String
  stable val value: String
  <runtime stability> = Stable
}
unstable class WorkDetailsModel {
  stable val id: String
  stable val name: String
  stable val disambiguation: String?
  stable val type: String?
  stable val language: String?
  unstable val iswcs: List<String>?
  unstable val attributes: List<WorkAttributeUiModel>
  unstable val urls: List<RelationListItemModel>
  <runtime stability> = Unstable
}
runtime class GetWorksByEntity {
  runtime val worksByEntityRepository: WorksByEntityRepository
  <runtime stability> = Uncertain(WorksByEntityRepository)
}
