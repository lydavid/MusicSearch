restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SearchScaffold(
  stable modifier: Modifier? = @static Companion
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String? ->

}

  stable initialQuery: String? = @static null
  stable initialEntity: MusicBrainzEntity? = @static null
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RecentSearchesHeader(
  stable onDeleteAllHistory: Function0<Unit>? = @static {

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewRecentSearchesHeader()
restartable scheme("[androidx.compose.ui.UiComposable]") fun SearchHistoryListItem(
  unstable searchHistory: SearchHistoryListItemModel
  stable modifier: Modifier? = @static Companion
  stable onItemClick: Function2<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'query')] String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String ->

}

  stable onDeleteItem: Function1<SearchHistoryListItemModel, Unit>? = @static { it: SearchHistoryListItemModel ->

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewSearchHistoryListItem()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SearchHistoryScreen(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable onItemClick: Function2<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'query')] String, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String ->

}

  stable onDeleteItem: Function1<SearchHistoryListItemModel, Unit>? = @static { it: SearchHistoryListItemModel ->

}

  stable onDeleteAllHistory: Function0<Unit>? = @static {

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SearchResultsScreen(
  lazyPagingItems: LazyPagingItems<ListItemModel>
  stable lazyListState: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable snackbarHostState: SnackbarHostState? = @dynamic SnackbarHostState()
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String? ->

}

)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SearchScreen(
  stable modifier: Modifier? = @static Companion
  stable snackbarHostState: SnackbarHostState? = @dynamic SnackbarHostState()
  stable onItemClick: Function3<@[ParameterName(name = 'entity')] MusicBrainzEntity, @[ParameterName(name = 'id')] String, @[ParameterName(name = 'title')] String?, Unit>? = @static { <unused var>: MusicBrainzEntity, <unused var>: String, <unused var>: String? ->

}

  stable initialQuery: String? = @static null
  stable initialEntity: MusicBrainzEntity? = @static null
  unstable viewModel: SearchViewModel? = @dynamic koinViewModel(null, null, null, null, null, null, $composer, 0, 0b00111111)
)
