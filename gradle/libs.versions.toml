[versions]
aboutlibraries = "11.2.3"
androidGradlePlugin = "8.7.3"
baselineprofile = "1.3.3"
benchmarkMacroJunit4 = "1.3.3"
chucker = "4.1.0"
circuit = "0.25.0"
coil = "3.0.3"
compose-foundation = "1.7.6"
compose-material = "1.7.6"
compose-material3 = "1.3.1"
compose-multiplatform = "1.7.1"
compose-ui = "1.7.6"
datastore = "1.1.1"
detekt = "1.23.7"
junit = "4.13.2"
junitJupiterEngine = "5.11.4"
koin = "4.0.0"
koinCompose = "4.0.0"
konsist = "0.17.3"
kotlin = "2.1.0"
kotlinx-coroutines = "1.9.0"
ksp = "2.1.0-1.0.29"
leakcanaryAndroid = "2.14"
lyricist = "1.7.0"
mockk = "1.13.13"
multiplatformPaths = "0.2.2"
okhttp = "4.12.0"
pagingMultiplatform = "3.3.0-alpha02-0.5.1"
pagingTesting = "3.3.5"
paparazzi = "1.3.3"
profileinstaller = "1.4.1"
sqldelight = "2.0.2"
stately = "2.1.0"
turbine = "1.2.0"
uiautomator = "2.3.0"

[libraries]
aboutlibraries-compose-m3 = { module = "com.mikepenz:aboutlibraries-compose-m3", version.ref = "aboutlibraries" }
aboutlibraries-core = { module = "com.mikepenz:aboutlibraries-core", version.ref = "aboutlibraries" }
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
androidx-activity-compose = "androidx.activity:activity-compose:1.9.3"
androidx-arch-core-testing = "androidx.arch.core:core-testing:2.2.0"
androidx-benchmark-macro-junit4 = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "benchmarkMacroJunit4" }
androidx-core = "androidx.core:core-ktx:1.15.0"
androidx-datastore-preferences-android = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
#androidx-datastore-preferences-jvm = { group = "androidx.datastore", name = "datastore-preferences-jvm", version.ref = "datastore" }
androidx-lifecycle-viewmodel-compose = "androidx.lifecycle:lifecycle-viewmodel-compose:2.8.6"
androidx-navigation-compose = "androidx.navigation:navigation-compose:2.8.5"
androidx-paging-testing = { module = "androidx.paging:paging-testing", version.ref = "pagingTesting" }
androidx-profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "profileinstaller" }
androidx-test-espresso-core = "androidx.test.espresso:espresso-core:3.6.1"
androidx-test-junit = "androidx.test.ext:junit:1.2.1"
androidx-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiautomator" }
appauth = "net.openid:appauth:0.11.1"
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chucker-noop = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }
circuit-foundation = { module = "com.slack.circuit:circuit-foundation", version.ref = "circuit" }
circuit-overlay = { module = "com.slack.circuit:circuit-overlay", version.ref = "circuit" }
circuit-retained = { module = "com.slack.circuit:circuit-retained", version.ref = "circuit" }
circuit-test = { module = "com.slack.circuit:circuit-test", version.ref = "circuit" }
circuitx-gesture-navigation = { module = "com.slack.circuit:circuitx-gesture-navigation", version.ref = "circuit" }
circuitx-overlays = { module = "com.slack.circuit:circuitx-overlays", version.ref = "circuit" }
coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
coil-test = { module = "io.coil-kt.coil3:coil-test", version.ref = "coil" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose-foundation" }
compose-gradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose-material" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
compose-ui-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui" }
compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose-ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
composeCompiler-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
desugarjdklibs = "com.android.tools:desugar_jdk_libs:2.1.3"
detekt-compose = "io.nlopez.compose.rules:detekt:0.4.22"
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-gradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-bom = "com.google.firebase:firebase-bom:33.7.0"
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
junit = { module = "junit:junit", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiterEngine" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsist" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-collections-immutable = "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.8"
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.6.1"
ksp-gradlePlugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
ktor-bom = "io.ktor:ktor-bom:3.0.3"
ktor-client-auth = { module = "io.ktor:ktor-client-auth" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation" }
ktor-client-core = { module = "io.ktor:ktor-client-core" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json" }
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanaryAndroid" }
lyricist-core = { module = "cafe.adriel.lyricist:lyricist-core", version.ref = "lyricist" }
lyricist-library = { module = "cafe.adriel.lyricist:lyricist", version.ref = "lyricist" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
multiplatform-paths = { module = "me.sujanpoudel.multiplatform.utils:multiplatform-paths", version.ref = "multiplatformPaths" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
paging-common = { module = "app.cash.paging:paging-common", version.ref = "pagingMultiplatform" }
paging-compose = { module = "app.cash.paging:paging-compose-common", version.ref = "pagingMultiplatform" }
paparazzi = { module = "app.cash.paparazzi:paparazzi", version.ref = "paparazzi" }
robolectric = "org.robolectric:robolectric:4.14.1"
scribejava = "com.github.scribejava:scribejava-apis:8.3.3"
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-paging = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
sqldelight-sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }
stately-iso-collections = { module = "co.touchlab:stately-iso-collections", version.ref = "stately" }
stately-isolate = { module = "co.touchlab:stately-isolate", version.ref = "stately" }
test-parameter-injector = "com.google.testparameterinjector:test-parameter-injector:1.18"
timber = "com.jakewharton.timber:timber:5.0.1"
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
windowSizeClass = "dev.chrisbanes.material3:material3-window-size-class-multiplatform:0.5.0"

[bundles]
kotlinx-coroutines = [
    "kotlinx-coroutines-android",
    "kotlinx-coroutines-test",
]
ktor-jvm = [
    "ktor-client-auth",
    "ktor-client-content-negotiation",
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-okhttp",
    "ktor-serialization-kotlinx-json",
]

[plugins]
aboutlibraries = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutlibraries" }
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-test = { id = "com.android.test", version.ref = "androidGradlePlugin" }
baselineprofile = { id = "androidx.baselineprofile", version.ref = "baselineprofile" }
build-config = "com.github.gmazzo.buildconfig:5.5.1"
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
dependency-analysis = "com.autonomousapps.dependency-analysis:2.4.1"
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
firebase-crashlytics = "com.google.firebase.crashlytics:3.0.2"
google-services = "com.google.gms.google-services:4.4.2"
gradle-versions = "com.github.ben-manes.versions:0.51.0"
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-powerAssert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
version-catalog-update = "nl.littlerobots.version-catalog-update:0.8.5"
